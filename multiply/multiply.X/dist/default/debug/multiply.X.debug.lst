

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu May 08 14:58:26 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11   000000                     
    12                           ; Generated 17/01/2025 GMT
    13                           ; 
    14                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC18F452 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46   000FE0                     bsr             equ	4064
    47   000FE9                     fsr0            equ	4073
    48   000FEA                     fsr0h           equ	4074
    49   000FE9                     fsr0l           equ	4073
    50   000FE1                     fsr1            equ	4065
    51   000FE2                     fsr1h           equ	4066
    52   000FE1                     fsr1l           equ	4065
    53   000FD9                     fsr2            equ	4057
    54   000FDA                     fsr2h           equ	4058
    55   000FD9                     fsr2l           equ	4057
    56   000FEF                     indf0           equ	4079
    57   000FE7                     indf1           equ	4071
    58   000FDF                     indf2           equ	4063
    59   000FF2                     intcon          equ	4082
    60   000000                     nvmcon          equ	0
    61   000FF9                     pcl             equ	4089
    62   000FFA                     pclath          equ	4090
    63   000FFB                     pclatu          equ	4091
    64   000FEB                     plusw0          equ	4075
    65   000FE3                     plusw1          equ	4067
    66   000FDB                     plusw2          equ	4059
    67   000FED                     postdec0        equ	4077
    68   000FE5                     postdec1        equ	4069
    69   000FDD                     postdec2        equ	4061
    70   000FEE                     postinc0        equ	4078
    71   000FE6                     postinc1        equ	4070
    72   000FDE                     postinc2        equ	4062
    73   000FEC                     preinc0         equ	4076
    74   000FE4                     preinc1         equ	4068
    75   000FDC                     preinc2         equ	4060
    76   000FF3                     prod            equ	4083
    77   000FF4                     prodh           equ	4084
    78   000FF3                     prodl           equ	4083
    79   000FD8                     status          equ	4056
    80   000FF5                     tablat          equ	4085
    81   000FF6                     tblptr          equ	4086
    82   000FF7                     tblptrh         equ	4087
    83   000FF6                     tblptrl         equ	4086
    84   000FF8                     tblptru         equ	4088
    85   000FFD                     tosl            equ	4093
    86   000FE8                     wreg            equ	4072
    87   000F80                     PORTA           equ	3968	;# 
    88   000F81                     PORTB           equ	3969	;# 
    89   000F82                     PORTC           equ	3970	;# 
    90   000F83                     PORTD           equ	3971	;# 
    91   000F84                     PORTE           equ	3972	;# 
    92   000F89                     LATA            equ	3977	;# 
    93   000F8A                     LATB            equ	3978	;# 
    94   000F8B                     LATC            equ	3979	;# 
    95   000F8C                     LATD            equ	3980	;# 
    96   000F8D                     LATE            equ	3981	;# 
    97   000F92                     TRISA           equ	3986	;# 
    98   000F92                     DDRA            equ	3986	;# 
    99   000F93                     TRISB           equ	3987	;# 
   100   000F93                     DDRB            equ	3987	;# 
   101   000F94                     TRISC           equ	3988	;# 
   102   000F94                     DDRC            equ	3988	;# 
   103   000F95                     TRISD           equ	3989	;# 
   104   000F95                     DDRD            equ	3989	;# 
   105   000F96                     TRISE           equ	3990	;# 
   106   000F96                     DDRE            equ	3990	;# 
   107   000F9D                     PIE1            equ	3997	;# 
   108   000F9E                     PIR1            equ	3998	;# 
   109   000F9F                     IPR1            equ	3999	;# 
   110   000FA0                     PIE2            equ	4000	;# 
   111   000FA1                     PIR2            equ	4001	;# 
   112   000FA2                     IPR2            equ	4002	;# 
   113   000FA6                     EECON1          equ	4006	;# 
   114   000FA7                     EECON2          equ	4007	;# 
   115   000FA8                     EEDATA          equ	4008	;# 
   116   000FA9                     EEADR           equ	4009	;# 
   117   000FAB                     RCSTA           equ	4011	;# 
   118   000FAB                     RCSTA1          equ	4011	;# 
   119   000FAC                     TXSTA           equ	4012	;# 
   120   000FAC                     TXSTA1          equ	4012	;# 
   121   000FAD                     TXREG           equ	4013	;# 
   122   000FAD                     TXREG1          equ	4013	;# 
   123   000FAE                     RCREG           equ	4014	;# 
   124   000FAE                     RCREG1          equ	4014	;# 
   125   000FAF                     SPBRG           equ	4015	;# 
   126   000FAF                     SPBRG1          equ	4015	;# 
   127   000FB1                     T3CON           equ	4017	;# 
   128   000FB2                     TMR3            equ	4018	;# 
   129   000FB2                     TMR3L           equ	4018	;# 
   130   000FB3                     TMR3H           equ	4019	;# 
   131   000FBA                     CCP2CON         equ	4026	;# 
   132   000FBB                     CCPR2           equ	4027	;# 
   133   000FBB                     CCPR2L          equ	4027	;# 
   134   000FBC                     CCPR2H          equ	4028	;# 
   135   000FBD                     CCP1CON         equ	4029	;# 
   136   000FBE                     CCPR1           equ	4030	;# 
   137   000FBE                     CCPR1L          equ	4030	;# 
   138   000FBF                     CCPR1H          equ	4031	;# 
   139   000FC1                     ADCON1          equ	4033	;# 
   140   000FC2                     ADCON0          equ	4034	;# 
   141   000FC3                     ADRES           equ	4035	;# 
   142   000FC3                     ADRESL          equ	4035	;# 
   143   000FC4                     ADRESH          equ	4036	;# 
   144   000FC5                     SSPCON2         equ	4037	;# 
   145   000FC6                     SSPCON1         equ	4038	;# 
   146   000FC7                     SSPSTAT         equ	4039	;# 
   147   000FC8                     SSPADD          equ	4040	;# 
   148   000FC9                     SSPBUF          equ	4041	;# 
   149   000FCA                     T2CON           equ	4042	;# 
   150   000FCB                     PR2             equ	4043	;# 
   151   000FCB                     MEMCON          equ	4043	;# 
   152   000FCC                     TMR2            equ	4044	;# 
   153   000FCD                     T1CON           equ	4045	;# 
   154   000FCE                     TMR1            equ	4046	;# 
   155   000FCE                     TMR1L           equ	4046	;# 
   156   000FCF                     TMR1H           equ	4047	;# 
   157   000FD0                     RCON            equ	4048	;# 
   158   000FD1                     WDTCON          equ	4049	;# 
   159   000FD2                     LVDCON          equ	4050	;# 
   160   000FD3                     OSCCON          equ	4051	;# 
   161   000FD5                     T0CON           equ	4053	;# 
   162   000FD6                     TMR0            equ	4054	;# 
   163   000FD6                     TMR0L           equ	4054	;# 
   164   000FD7                     TMR0H           equ	4055	;# 
   165   000FD8                     STATUS          equ	4056	;# 
   166   000FD9                     FSR2            equ	4057	;# 
   167   000FD9                     FSR2L           equ	4057	;# 
   168   000FDA                     FSR2H           equ	4058	;# 
   169   000FDB                     PLUSW2          equ	4059	;# 
   170   000FDC                     PREINC2         equ	4060	;# 
   171   000FDD                     POSTDEC2        equ	4061	;# 
   172   000FDE                     POSTINC2        equ	4062	;# 
   173   000FDF                     INDF2           equ	4063	;# 
   174   000FE0                     BSR             equ	4064	;# 
   175   000FE1                     FSR1            equ	4065	;# 
   176   000FE1                     FSR1L           equ	4065	;# 
   177   000FE2                     FSR1H           equ	4066	;# 
   178   000FE3                     PLUSW1          equ	4067	;# 
   179   000FE4                     PREINC1         equ	4068	;# 
   180   000FE5                     POSTDEC1        equ	4069	;# 
   181   000FE6                     POSTINC1        equ	4070	;# 
   182   000FE7                     INDF1           equ	4071	;# 
   183   000FE8                     WREG            equ	4072	;# 
   184   000FE9                     FSR0            equ	4073	;# 
   185   000FE9                     FSR0L           equ	4073	;# 
   186   000FEA                     FSR0H           equ	4074	;# 
   187   000FEB                     PLUSW0          equ	4075	;# 
   188   000FEC                     PREINC0         equ	4076	;# 
   189   000FED                     POSTDEC0        equ	4077	;# 
   190   000FEE                     POSTINC0        equ	4078	;# 
   191   000FEF                     INDF0           equ	4079	;# 
   192   000FF0                     INTCON3         equ	4080	;# 
   193   000FF1                     INTCON2         equ	4081	;# 
   194   000FF2                     INTCON          equ	4082	;# 
   195   000FF2                     INTCON1         equ	4082	;# 
   196   000FF3                     PROD            equ	4083	;# 
   197   000FF3                     PRODL           equ	4083	;# 
   198   000FF4                     PRODH           equ	4084	;# 
   199   000FF5                     TABLAT          equ	4085	;# 
   200   000FF6                     TBLPTR          equ	4086	;# 
   201   000FF6                     TBLPTRL         equ	4086	;# 
   202   000FF7                     TBLPTRH         equ	4087	;# 
   203   000FF8                     TBLPTRU         equ	4088	;# 
   204   000FF9                     PCLAT           equ	4089	;# 
   205   000FF9                     PC              equ	4089	;# 
   206   000FF9                     PCL             equ	4089	;# 
   207   000FFA                     PCLATH          equ	4090	;# 
   208   000FFB                     PCLATU          equ	4091	;# 
   209   000FFC                     STKPTR          equ	4092	;# 
   210   000FFD                     TOS             equ	4093	;# 
   211   000FFD                     TOSL            equ	4093	;# 
   212   000FFE                     TOSH            equ	4094	;# 
   213   000FFF                     TOSU            equ	4095	;# 
   214   000F82                     _PORTC          set	3970
   215   000F94                     _TRISC          set	3988
   216   000F81                     _PORTB          set	3969
   217   000F93                     _TRISB          set	3987
   218                           
   219                           ; #config settings
   220                           
   221                           	psect	cinit
   222   000672                     __pcinit:
   223                           	callstack 0
   224   000672                     start_initialization:
   225                           	callstack 0
   226   000672                     __initialization:
   227                           	callstack 0
   228   000672                     end_of_initialization:
   229                           	callstack 0
   230   000672                     __end_of__initialization:
   231                           	callstack 0
   232   000672  0100               	movlb	0
   233   000674  EF01  F003         	goto	_main	;jump to C main() function
   234                           
   235                           	psect	cstackCOMRAM
   236   000001                     __pcstackCOMRAM:
   237                           	callstack 0
   238   000001                     ??_main:
   239                           
   240                           ; 1 bytes @ 0x0
   241   000001                     	ds	1
   242   000002                     main@i:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0x1
   246   000002                     	ds	2
   247   000004                     main@num1:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x3
   251   000004                     	ds	2
   252   000006                     main@num2:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x5
   256   000006                     	ds	2
   257   000008                     main@result:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x7
   261   000008                     	ds	2
   262                           
   263 ;;
   264 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   265 ;;
   266 ;; *************** function _main *****************
   267 ;; Defined at:
   268 ;;		line 7 in file "main.c"
   269 ;; Parameters:    Size  Location     Type
   270 ;;		None
   271 ;; Auto vars:     Size  Location     Type
   272 ;;  result          2    7[COMRAM] int 
   273 ;;  num2            2    5[COMRAM] int 
   274 ;;  num1            2    3[COMRAM] int 
   275 ;;  i               2    1[COMRAM] int 
   276 ;; Return value:  Size  Location     Type
   277 ;;                  1    wreg      void 
   278 ;; Registers used:
   279 ;;		wreg, status,2, status,0, prodl, prodh
   280 ;; Tracked objects:
   281 ;;		On entry : 0/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   285 ;;      Params:         0       0       0       0       0       0       0
   286 ;;      Locals:         8       0       0       0       0       0       0
   287 ;;      Temps:          1       0       0       0       0       0       0
   288 ;;      Totals:         9       0       0       0       0       0       0
   289 ;;Total ram usage:        9 bytes
   290 ;; This function calls:
   291 ;;		Nothing
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           	psect	text0
   298   000602                     __ptext0:
   299                           	callstack 0
   300   000602                     _main:
   301                           	callstack 31
   302   000602  FFFF               	dw	65535	; assembler added errata NOP
   303                           
   304                           ;main.c: 8:     int num1, num2;;main.c: 9:     int result, i;;main.c: 11:     result = 0
      +                          ;
   305   000604  0E00               	movlw	0
   306   000606  6E09               	movwf	(main@result+1)^0,c
   307   000608  0E00               	movlw	0
   308   00060A  6E08               	movwf	main@result^0,c
   309                           
   310                           ;main.c: 12:     num1 = 0x23;
   311   00060C  0E00               	movlw	0
   312   00060E  6E05               	movwf	(main@num1+1)^0,c
   313   000610  0E23               	movlw	35
   314   000612  6E04               	movwf	main@num1^0,c
   315                           
   316                           ;main.c: 13:     num2 = 0x10;
   317   000614  0E00               	movlw	0
   318   000616  6E07               	movwf	(main@num2+1)^0,c
   319   000618  0E10               	movlw	16
   320   00061A  6E06               	movwf	main@num2^0,c
   321                           
   322                           ;main.c: 15:     for (i = 1; i <= num2; i++) {
   323   00061C  0E00               	movlw	0
   324   00061E  6E03               	movwf	(main@i+1)^0,c
   325   000620  0E01               	movlw	1
   326   000622  6E02               	movwf	main@i^0,c
   327   000624  EF1D  F003         	goto	l698
   328   000628                     l694:
   329   000628  FFFF               	dw	65535	; assembler added errata NOP
   330                           
   331                           ;main.c: 16:         result = result + num1;
   332   00062A  5004               	movf	main@num1^0,w,c
   333   00062C  2408               	addwf	main@result^0,w,c
   334   00062E  6E08               	movwf	main@result^0,c
   335   000630  5005               	movf	(main@num1+1)^0,w,c
   336   000632  2009               	addwfc	(main@result+1)^0,w,c
   337   000634  6E09               	movwf	(main@result+1)^0,c
   338   000636                     
   339                           ;main.c: 17:     }
   340   000636  4A02               	infsnz	main@i^0,f,c
   341   000638  2A03               	incf	(main@i+1)^0,f,c
   342   00063A                     l698:
   343   00063A  FFFF               	dw	65535	; assembler added errata NOP
   344   00063C  5002               	movf	main@i^0,w,c
   345   00063E  5C06               	subwf	main@num2^0,w,c
   346   000640  5007               	movf	(main@num2+1)^0,w,c
   347   000642  0A80               	xorlw	128
   348   000644  6E01               	movwf	??_main^0,c
   349   000646  5003               	movf	(main@i+1)^0,w,c
   350   000648  0A80               	xorlw	128
   351   00064A  5801               	subwfb	??_main^0,w,c
   352   00064C  B0D8               	btfsc	status,0,c
   353   00064E  EF2B  F003         	goto	u11
   354   000652  EF2E  F003         	goto	u10
   355   000656                     u11:
   356   000656  FFFF               	dw	65535	; assembler added errata NOP
   357   000658  EF14  F003         	goto	l694
   358   00065C                     u10:
   359   00065C  FFFF               	dw	65535	; assembler added errata NOP
   360   00065E                     
   361                           ;main.c: 19:     TRISB = 0;
   362   00065E  6A93               	clrf	147,c	;volatile
   363                           
   364                           ;main.c: 20:     PORTB = result;
   365   000660  C008  FF81         	movff	main@result,3969	;volatile
   366                           
   367                           ;main.c: 22:     TRISC = 0;
   368   000664  6A94               	clrf	148,c	;volatile
   369   000666                     
   370                           ;main.c: 23:     PORTC = num1*num2;
   371   000666  5004               	movf	main@num1^0,w,c
   372   000668  0206               	mulwf	main@num2^0,c
   373   00066A  CFF3 FF82          	movff	prodl,3970	;volatile
   374   00066E  EFFE  F01F         	goto	start
   375   000672                     __end_of_main:
   376                           	callstack 0
   377                           
   378                           	psect	smallconst
   379   000600                     __psmallconst:
   380                           	callstack 0
   381   000600  00                 	db	0
   382   000601  00                 	db	0	; dummy byte at the end
   383   000600                     __smallconst    set	__psmallconst
   384   000600                     __mediumconst   set	__psmallconst
   385   000000                     __activetblptr  equ	0
   386                           
   387                           	psect	rparam
   388   000001                     ___rparam_used  equ	1
   389   000000                     ___param_bank   equ	0
   390   000000                     __Lparam        equ	__Lrparam
   391   000000                     __Hparam        equ	__Hrparam
   392                           tosu	equ	0xFFF
   393                           tosh	equ	0xFFE
   394                           tosl	equ	0xFFD
   395                           stkptr	equ	0xFFC
   396                           pclatu	equ	0xFFB
   397                           pclath	equ	0xFFA
   398                           pcl	equ	0xFF9
   399                           tblptru	equ	0xFF8
   400                           tblptrh	equ	0xFF7
   401                           tblptrl	equ	0xFF6
   402                           tablat	equ	0xFF5
   403                           prodh	equ	0xFF4
   404                           prodl	equ	0xFF3
   405                           indf0	equ	0xFEF
   406                           postinc0	equ	0xFEE
   407                           postdec0	equ	0xFED
   408                           preinc0	equ	0xFEC
   409                           plusw0	equ	0xFEB
   410                           fsr0h	equ	0xFEA
   411                           fsr0l	equ	0xFE9
   412                           wreg	equ	0xFE8
   413                           indf1	equ	0xFE7
   414                           postinc1	equ	0xFE6
   415                           postdec1	equ	0xFE5
   416                           preinc1	equ	0xFE4
   417                           plusw1	equ	0xFE3
   418                           fsr1h	equ	0xFE2
   419                           fsr1l	equ	0xFE1
   420                           bsr	equ	0xFE0
   421                           indf2	equ	0xFDF
   422                           postinc2	equ	0xFDE
   423                           postdec2	equ	0xFDD
   424                           preinc2	equ	0xFDC
   425                           plusw2	equ	0xFDB
   426                           fsr2h	equ	0xFDA
   427                           fsr2l	equ	0xFD9
   428                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      9       9
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     105
                                              0 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM          127      0       0      0.0%
BITBANK0           128      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BITBIGSFRh         126      0       0      0.0%
BITBIGSFRl           1      0       0      0.0%
COMRAM             127      9       9      7.1%
BANK0              128      0       0      0.0%
BANK1              256      0       0      0.0%
BANK2              256      0       0      0.0%
BANK3              256      0       0      0.0%
BANK4              256      0       0      0.0%
BANK5              256      0       0      0.0%
BIGRAM            1535      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       9      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu May 08 14:58:26 2025

                                                 l15 065E                                                   l16 066E  
                                                 u10 065C                                                   u11 0656  
                                                l700 0666                                                  l692 0602  
                                                l694 0628                                                  l696 0636  
                                                l698 063A                                                 _main 0602  
                                               prodl 0FF3                                                 start 3FFC  
                                       ___param_bank 0000                                                ?_main 0001  
                                              _PORTB 0F81                                                _PORTC 0F82  
                                              _TRISB 0F93                                                _TRISC 0F94  
                                              main@i 0002                                                status 0FD8  
                                    __initialization 0672                                         __end_of_main 0672  
                                             ??_main 0001                                        __activetblptr 0000  
                                             isa$std 0001                                         __mediumconst 0600  
                                         __accesstop 0080                              __end_of__initialization 0672  
                                      ___rparam_used 0001                                       __pcstackCOMRAM 0001  
                                            __Hparam 0000                                              __Lparam 0000  
                                       __psmallconst 0600                                              __pcinit 0672  
                                            __ramtop 0600                                              __ptext0 0602  
                               end_of_initialization 0672                                           main@result 0008  
                                start_initialization 0672                                          __smallconst 0600  
                                           __Hrparam 0000                                             __Lrparam 0000  
                                           isa$xinst 0000                                             main@num1 0004  
                                           main@num2 0006  
