

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu May 08 11:31:24 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13   000000                     
    14                           ; Generated 17/01/2025 GMT
    15                           ; 
    16                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F452 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48   000FE0                     bsr             equ	4064
    49   000FE9                     fsr0            equ	4073
    50   000FEA                     fsr0h           equ	4074
    51   000FE9                     fsr0l           equ	4073
    52   000FE1                     fsr1            equ	4065
    53   000FE2                     fsr1h           equ	4066
    54   000FE1                     fsr1l           equ	4065
    55   000FD9                     fsr2            equ	4057
    56   000FDA                     fsr2h           equ	4058
    57   000FD9                     fsr2l           equ	4057
    58   000FEF                     indf0           equ	4079
    59   000FE7                     indf1           equ	4071
    60   000FDF                     indf2           equ	4063
    61   000FF2                     intcon          equ	4082
    62   000000                     nvmcon          equ	0
    63   000FF9                     pcl             equ	4089
    64   000FFA                     pclath          equ	4090
    65   000FFB                     pclatu          equ	4091
    66   000FEB                     plusw0          equ	4075
    67   000FE3                     plusw1          equ	4067
    68   000FDB                     plusw2          equ	4059
    69   000FED                     postdec0        equ	4077
    70   000FE5                     postdec1        equ	4069
    71   000FDD                     postdec2        equ	4061
    72   000FEE                     postinc0        equ	4078
    73   000FE6                     postinc1        equ	4070
    74   000FDE                     postinc2        equ	4062
    75   000FEC                     preinc0         equ	4076
    76   000FE4                     preinc1         equ	4068
    77   000FDC                     preinc2         equ	4060
    78   000FF3                     prod            equ	4083
    79   000FF4                     prodh           equ	4084
    80   000FF3                     prodl           equ	4083
    81   000FD8                     status          equ	4056
    82   000FF5                     tablat          equ	4085
    83   000FF6                     tblptr          equ	4086
    84   000FF7                     tblptrh         equ	4087
    85   000FF6                     tblptrl         equ	4086
    86   000FF8                     tblptru         equ	4088
    87   000FFD                     tosl            equ	4093
    88   000FE8                     wreg            equ	4072
    89   000F80                     PORTA           equ	3968	;# 
    90   000F81                     PORTB           equ	3969	;# 
    91   000F82                     PORTC           equ	3970	;# 
    92   000F83                     PORTD           equ	3971	;# 
    93   000F84                     PORTE           equ	3972	;# 
    94   000F89                     LATA            equ	3977	;# 
    95   000F8A                     LATB            equ	3978	;# 
    96   000F8B                     LATC            equ	3979	;# 
    97   000F8C                     LATD            equ	3980	;# 
    98   000F8D                     LATE            equ	3981	;# 
    99   000F92                     TRISA           equ	3986	;# 
   100   000F92                     DDRA            equ	3986	;# 
   101   000F93                     TRISB           equ	3987	;# 
   102   000F93                     DDRB            equ	3987	;# 
   103   000F94                     TRISC           equ	3988	;# 
   104   000F94                     DDRC            equ	3988	;# 
   105   000F95                     TRISD           equ	3989	;# 
   106   000F95                     DDRD            equ	3989	;# 
   107   000F96                     TRISE           equ	3990	;# 
   108   000F96                     DDRE            equ	3990	;# 
   109   000F9D                     PIE1            equ	3997	;# 
   110   000F9E                     PIR1            equ	3998	;# 
   111   000F9F                     IPR1            equ	3999	;# 
   112   000FA0                     PIE2            equ	4000	;# 
   113   000FA1                     PIR2            equ	4001	;# 
   114   000FA2                     IPR2            equ	4002	;# 
   115   000FA6                     EECON1          equ	4006	;# 
   116   000FA7                     EECON2          equ	4007	;# 
   117   000FA8                     EEDATA          equ	4008	;# 
   118   000FA9                     EEADR           equ	4009	;# 
   119   000FAB                     RCSTA           equ	4011	;# 
   120   000FAB                     RCSTA1          equ	4011	;# 
   121   000FAC                     TXSTA           equ	4012	;# 
   122   000FAC                     TXSTA1          equ	4012	;# 
   123   000FAD                     TXREG           equ	4013	;# 
   124   000FAD                     TXREG1          equ	4013	;# 
   125   000FAE                     RCREG           equ	4014	;# 
   126   000FAE                     RCREG1          equ	4014	;# 
   127   000FAF                     SPBRG           equ	4015	;# 
   128   000FAF                     SPBRG1          equ	4015	;# 
   129   000FB1                     T3CON           equ	4017	;# 
   130   000FB2                     TMR3            equ	4018	;# 
   131   000FB2                     TMR3L           equ	4018	;# 
   132   000FB3                     TMR3H           equ	4019	;# 
   133   000FBA                     CCP2CON         equ	4026	;# 
   134   000FBB                     CCPR2           equ	4027	;# 
   135   000FBB                     CCPR2L          equ	4027	;# 
   136   000FBC                     CCPR2H          equ	4028	;# 
   137   000FBD                     CCP1CON         equ	4029	;# 
   138   000FBE                     CCPR1           equ	4030	;# 
   139   000FBE                     CCPR1L          equ	4030	;# 
   140   000FBF                     CCPR1H          equ	4031	;# 
   141   000FC1                     ADCON1          equ	4033	;# 
   142   000FC2                     ADCON0          equ	4034	;# 
   143   000FC3                     ADRES           equ	4035	;# 
   144   000FC3                     ADRESL          equ	4035	;# 
   145   000FC4                     ADRESH          equ	4036	;# 
   146   000FC5                     SSPCON2         equ	4037	;# 
   147   000FC6                     SSPCON1         equ	4038	;# 
   148   000FC7                     SSPSTAT         equ	4039	;# 
   149   000FC8                     SSPADD          equ	4040	;# 
   150   000FC9                     SSPBUF          equ	4041	;# 
   151   000FCA                     T2CON           equ	4042	;# 
   152   000FCB                     PR2             equ	4043	;# 
   153   000FCB                     MEMCON          equ	4043	;# 
   154   000FCC                     TMR2            equ	4044	;# 
   155   000FCD                     T1CON           equ	4045	;# 
   156   000FCE                     TMR1            equ	4046	;# 
   157   000FCE                     TMR1L           equ	4046	;# 
   158   000FCF                     TMR1H           equ	4047	;# 
   159   000FD0                     RCON            equ	4048	;# 
   160   000FD1                     WDTCON          equ	4049	;# 
   161   000FD2                     LVDCON          equ	4050	;# 
   162   000FD3                     OSCCON          equ	4051	;# 
   163   000FD5                     T0CON           equ	4053	;# 
   164   000FD6                     TMR0            equ	4054	;# 
   165   000FD6                     TMR0L           equ	4054	;# 
   166   000FD7                     TMR0H           equ	4055	;# 
   167   000FD8                     STATUS          equ	4056	;# 
   168   000FD9                     FSR2            equ	4057	;# 
   169   000FD9                     FSR2L           equ	4057	;# 
   170   000FDA                     FSR2H           equ	4058	;# 
   171   000FDB                     PLUSW2          equ	4059	;# 
   172   000FDC                     PREINC2         equ	4060	;# 
   173   000FDD                     POSTDEC2        equ	4061	;# 
   174   000FDE                     POSTINC2        equ	4062	;# 
   175   000FDF                     INDF2           equ	4063	;# 
   176   000FE0                     BSR             equ	4064	;# 
   177   000FE1                     FSR1            equ	4065	;# 
   178   000FE1                     FSR1L           equ	4065	;# 
   179   000FE2                     FSR1H           equ	4066	;# 
   180   000FE3                     PLUSW1          equ	4067	;# 
   181   000FE4                     PREINC1         equ	4068	;# 
   182   000FE5                     POSTDEC1        equ	4069	;# 
   183   000FE6                     POSTINC1        equ	4070	;# 
   184   000FE7                     INDF1           equ	4071	;# 
   185   000FE8                     WREG            equ	4072	;# 
   186   000FE9                     FSR0            equ	4073	;# 
   187   000FE9                     FSR0L           equ	4073	;# 
   188   000FEA                     FSR0H           equ	4074	;# 
   189   000FEB                     PLUSW0          equ	4075	;# 
   190   000FEC                     PREINC0         equ	4076	;# 
   191   000FED                     POSTDEC0        equ	4077	;# 
   192   000FEE                     POSTINC0        equ	4078	;# 
   193   000FEF                     INDF0           equ	4079	;# 
   194   000FF0                     INTCON3         equ	4080	;# 
   195   000FF1                     INTCON2         equ	4081	;# 
   196   000FF2                     INTCON          equ	4082	;# 
   197   000FF2                     INTCON1         equ	4082	;# 
   198   000FF3                     PROD            equ	4083	;# 
   199   000FF3                     PRODL           equ	4083	;# 
   200   000FF4                     PRODH           equ	4084	;# 
   201   000FF5                     TABLAT          equ	4085	;# 
   202   000FF6                     TBLPTR          equ	4086	;# 
   203   000FF6                     TBLPTRL         equ	4086	;# 
   204   000FF7                     TBLPTRH         equ	4087	;# 
   205   000FF8                     TBLPTRU         equ	4088	;# 
   206   000FF9                     PCLAT           equ	4089	;# 
   207   000FF9                     PC              equ	4089	;# 
   208   000FF9                     PCL             equ	4089	;# 
   209   000FFA                     PCLATH          equ	4090	;# 
   210   000FFB                     PCLATU          equ	4091	;# 
   211   000FFC                     STKPTR          equ	4092	;# 
   212   000FFD                     TOS             equ	4093	;# 
   213   000FFD                     TOSL            equ	4093	;# 
   214   000FFE                     TOSH            equ	4094	;# 
   215   000FFF                     TOSU            equ	4095	;# 
   216                           
   217                           	psect	idataCOMRAM
   218   000788                     __pidataCOMRAM:
   219                           	callstack 0
   220                           
   221                           ;initializer for main@F2542
   222   000788  0007               	dw	7
   223   00078A  0002               	dw	2
   224   00078C  0005               	dw	5
   225   00078E  0001               	dw	1
   226   000790  0006               	dw	6
   227   000F81                     _PORTB          set	3969
   228   000F93                     _TRISB          set	3987
   229                           
   230                           ; #config settings
   231                           
   232                           	psect	cinit
   233   000762                     __pcinit:
   234                           	callstack 0
   235   000762                     start_initialization:
   236                           	callstack 0
   237   000762                     __initialization:
   238                           	callstack 0
   239                           
   240                           ; Initialize objects allocated to COMRAM (10 bytes)
   241                           ; load TBLPTR registers with __pidataCOMRAM
   242   000762  0E88               	movlw	low __pidataCOMRAM
   243   000764  6EF6               	movwf	tblptrl,c
   244   000766  0E07               	movlw	high __pidataCOMRAM
   245   000768  6EF7               	movwf	tblptrh,c
   246   00076A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   247   00076C  6EF8               	movwf	tblptru,c
   248   00076E  EE00  F016         	lfsr	0,__pdataCOMRAM
   249   000772  EE10 F00A          	lfsr	1,10
   250   000776                     copy_data0:
   251   000776  0009               	tblrd		*+
   252   000778  CFF5 FFEE          	movff	tablat,postinc0
   253   00077C  50E5               	movf	postdec1,w,c
   254   00077E  50E1               	movf	fsr1l,w,c
   255   000780  E1FA               	bnz	copy_data0
   256   000782                     end_of_initialization:
   257                           	callstack 0
   258   000782                     __end_of__initialization:
   259                           	callstack 0
   260   000782  0100               	movlb	0
   261   000784  EF01  F003         	goto	_main	;jump to C main() function
   262                           
   263                           	psect	dataCOMRAM
   264   000016                     __pdataCOMRAM:
   265                           	callstack 0
   266   000016                     main@F2542:
   267                           	callstack 0
   268   000016                     	ds	10
   269                           
   270                           	psect	cstackCOMRAM
   271   000001                     __pcstackCOMRAM:
   272                           	callstack 0
   273   000001                     ??_main:
   274                           
   275                           ; 1 bytes @ 0x0
   276   000001                     	ds	5
   277   000006                     main@temp:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x5
   281   000006                     	ds	2
   282   000008                     main@num_desc:
   283                           	callstack 0
   284                           
   285                           ; 10 bytes @ 0x7
   286   000008                     	ds	10
   287   000012                     main@j:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x11
   291   000012                     	ds	2
   292   000014                     main@i:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x13
   296   000014                     	ds	2
   297                           
   298 ;;
   299 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   300 ;;
   301 ;; *************** function _main *****************
   302 ;; Defined at:
   303 ;;		line 5 in file "main.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;		None
   306 ;; Auto vars:     Size  Location     Type
   307 ;;  num_desc       10    7[COMRAM] int [5]
   308 ;;  i               2   19[COMRAM] int 
   309 ;;  j               2   17[COMRAM] int 
   310 ;;  temp            2    5[COMRAM] int 
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   320 ;;      Params:         0       0       0       0       0       0       0
   321 ;;      Locals:        16       0       0       0       0       0       0
   322 ;;      Temps:          5       0       0       0       0       0       0
   323 ;;      Totals:        21       0       0       0       0       0       0
   324 ;;Total ram usage:       21 bytes
   325 ;; This function calls:
   326 ;;		Nothing
   327 ;; This function is called by:
   328 ;;		Startup code after reset
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           	psect	text0
   333   000602                     __ptext0:
   334                           	callstack 0
   335   000602                     _main:
   336                           	callstack 31
   337   000602  FFFF               	dw	65535	; assembler added errata NOP
   338                           
   339                           ;main.c: 6:     int i, j, temp;;main.c: 7:     int num_desc[] = {7, 2, 5, 1, 6};
   340   000604  EE20  F016         	lfsr	2,main@F2542
   341   000608  EE10  F008         	lfsr	1,main@num_desc
   342   00060C  0E09               	movlw	9
   343   00060E                     u11:
   344   00060E  CFDB FFE3          	movff	plusw2,plusw1
   345   000612  06E8               	decf	wreg,f,c
   346   000614  E2FC               	bc	u11
   347   000616                     
   348                           ;main.c: 10:     for (i = 0; i <= 4; i++) {
   349   000616  0E00               	movlw	0
   350   000618  6E15               	movwf	(main@i+1)^0,c
   351   00061A  0E00               	movlw	0
   352   00061C  6E14               	movwf	main@i^0,c
   353   00061E                     l702:
   354   00061E  FFFF               	dw	65535	; assembler added errata NOP
   355                           
   356                           ;main.c: 11:         for (j = i + 1; j <= 4; j++) {
   357   000620  0E01               	movlw	1
   358   000622  2414               	addwf	main@i^0,w,c
   359   000624  6E12               	movwf	main@j^0,c
   360   000626  0E00               	movlw	0
   361   000628  2015               	addwfc	(main@i+1)^0,w,c
   362   00062A  6E13               	movwf	(main@j+1)^0,c
   363   00062C  BE13               	btfsc	(main@j+1)^0,7,c
   364   00062E  EF22  F003         	goto	u21
   365   000632  5013               	movf	(main@j+1)^0,w,c
   366   000634  E10A               	bnz	u20
   367   000636  0E05               	movlw	5
   368   000638  5C12               	subwf	main@j^0,w,c
   369   00063A  A0D8               	btfss	status,0,c
   370   00063C  EF22  F003         	goto	u21
   371   000640  EF25  F003         	goto	u20
   372   000644                     u21:
   373   000644  FFFF               	dw	65535	; assembler added errata NOP
   374   000646  EF28  F003         	goto	l706
   375   00064A                     u20:
   376   00064A  FFFF               	dw	65535	; assembler added errata NOP
   377   00064C  EF7C  F003         	goto	l718
   378   000650                     l706:
   379   000650  FFFF               	dw	65535	; assembler added errata NOP
   380                           
   381                           ;main.c: 13:             if (num_desc[i] < num_desc[j]) {
   382   000652  5012               	movf	main@j^0,w,c
   383   000654  0D02               	mullw	2
   384   000656  50F3               	movf	243,w,c
   385   000658  0F08               	addlw	low main@num_desc
   386   00065A  6ED9               	movwf	fsr2l,c
   387   00065C  6ADA               	clrf	fsr2h,c
   388   00065E  5014               	movf	main@i^0,w,c
   389   000660  0D02               	mullw	2
   390   000662  50F3               	movf	243,w,c
   391   000664  0F08               	addlw	low main@num_desc
   392   000666  6EE1               	movwf	fsr1l,c
   393   000668  6AE2               	clrf	fsr1h,c
   394   00066A  50DE               	movf	postinc2,w,c
   395   00066C  5CE6               	subwf	postinc1,w,c
   396   00066E  50E6               	movf	postinc1,w,c
   397   000670  0A80               	xorlw	128
   398   000672  6E05               	movwf	(??_main+4)^0,c
   399   000674  50DE               	movf	postinc2,w,c
   400   000676  0A80               	xorlw	128
   401   000678  5805               	subwfb	(??_main+4)^0,w,c
   402   00067A  B0D8               	btfsc	status,0,c
   403   00067C  EF42  F003         	goto	u31
   404   000680  EF45  F003         	goto	u30
   405   000684                     u31:
   406   000684  FFFF               	dw	65535	; assembler added errata NOP
   407   000686  EF6A  F003         	goto	l714
   408   00068A                     u30:
   409   00068A  FFFF               	dw	65535	; assembler added errata NOP
   410   00068C                     
   411                           ;main.c: 14:                 temp = num_desc[i];
   412   00068C  5014               	movf	main@i^0,w,c
   413   00068E  0D02               	mullw	2
   414   000690  50F3               	movf	243,w,c
   415   000692  0F08               	addlw	low main@num_desc
   416   000694  6ED9               	movwf	fsr2l,c
   417   000696  6ADA               	clrf	fsr2h,c
   418   000698  CFDE F006          	movff	postinc2,main@temp
   419   00069C  CFDD F007          	movff	postdec2,main@temp+1
   420   0006A0                     
   421                           ;main.c: 15:                 num_desc[i] = num_desc[j];
   422   0006A0  5012               	movf	main@j^0,w,c
   423   0006A2  0D02               	mullw	2
   424   0006A4  50F3               	movf	243,w,c
   425   0006A6  0F08               	addlw	low main@num_desc
   426   0006A8  6ED9               	movwf	fsr2l,c
   427   0006AA  6ADA               	clrf	fsr2h,c
   428   0006AC  5014               	movf	main@i^0,w,c
   429   0006AE  0D02               	mullw	2
   430   0006B0  50F3               	movf	243,w,c
   431   0006B2  0F08               	addlw	low main@num_desc
   432   0006B4  6EE1               	movwf	fsr1l,c
   433   0006B6  6AE2               	clrf	fsr1h,c
   434   0006B8  CFDE FFE6          	movff	postinc2,postinc1
   435   0006BC  CFDD FFE5          	movff	postdec2,postdec1
   436   0006C0                     
   437                           ;main.c: 16:                 num_desc[j] = temp;
   438   0006C0  5012               	movf	main@j^0,w,c
   439   0006C2  0D02               	mullw	2
   440   0006C4  50F3               	movf	243,w,c
   441   0006C6  0F08               	addlw	low main@num_desc
   442   0006C8  6ED9               	movwf	fsr2l,c
   443   0006CA  6ADA               	clrf	fsr2h,c
   444   0006CC  C006  FFDE         	movff	main@temp,postinc2
   445   0006D0  C007  FFDD         	movff	main@temp+1,postdec2
   446   0006D4                     l714:
   447   0006D4  FFFF               	dw	65535	; assembler added errata NOP
   448                           
   449                           ;main.c: 18:         }
   450   0006D6  4A12               	infsnz	main@j^0,f,c
   451   0006D8  2A13               	incf	(main@j+1)^0,f,c
   452   0006DA  BE13               	btfsc	(main@j+1)^0,7,c
   453   0006DC  EF79  F003         	goto	u41
   454   0006E0  5013               	movf	(main@j+1)^0,w,c
   455   0006E2  E10A               	bnz	u40
   456   0006E4  0E05               	movlw	5
   457   0006E6  5C12               	subwf	main@j^0,w,c
   458   0006E8  A0D8               	btfss	status,0,c
   459   0006EA  EF79  F003         	goto	u41
   460   0006EE  EF7C  F003         	goto	u40
   461   0006F2                     u41:
   462   0006F2  FFFF               	dw	65535	; assembler added errata NOP
   463   0006F4  EF28  F003         	goto	l706
   464   0006F8                     u40:
   465   0006F8                     l718:
   466   0006F8  FFFF               	dw	65535	; assembler added errata NOP
   467                           
   468                           ;main.c: 19:     }
   469   0006FA  4A14               	infsnz	main@i^0,f,c
   470   0006FC  2A15               	incf	(main@i+1)^0,f,c
   471   0006FE  BE15               	btfsc	(main@i+1)^0,7,c
   472   000700  EF8B  F003         	goto	u51
   473   000704  5015               	movf	(main@i+1)^0,w,c
   474   000706  E10A               	bnz	u50
   475   000708  0E05               	movlw	5
   476   00070A  5C14               	subwf	main@i^0,w,c
   477   00070C  A0D8               	btfss	status,0,c
   478   00070E  EF8B  F003         	goto	u51
   479   000712  EF8E  F003         	goto	u50
   480   000716                     u51:
   481   000716  FFFF               	dw	65535	; assembler added errata NOP
   482   000718  EF0F  F003         	goto	l702
   483   00071C                     u50:
   484   00071C  FFFF               	dw	65535	; assembler added errata NOP
   485   00071E                     
   486                           ;main.c: 21:     TRISB = 0;
   487   00071E  6A93               	clrf	147,c	;volatile
   488   000720                     
   489                           ;main.c: 24:     for (i = 0; i <= 4; i++) {
   490   000720  0E00               	movlw	0
   491   000722  6E15               	movwf	(main@i+1)^0,c
   492   000724  0E00               	movlw	0
   493   000726  6E14               	movwf	main@i^0,c
   494   000728                     l728:
   495   000728  FFFF               	dw	65535	; assembler added errata NOP
   496                           
   497                           ;main.c: 25:         PORTB = num_desc[i];
   498   00072A  5014               	movf	main@i^0,w,c
   499   00072C  0D02               	mullw	2
   500   00072E  50F3               	movf	243,w,c
   501   000730  0F08               	addlw	low main@num_desc
   502   000732  6ED9               	movwf	fsr2l,c
   503   000734  6ADA               	clrf	fsr2h,c
   504   000736  50DF               	movf	indf2,w,c
   505   000738  6E81               	movwf	129,c	;volatile
   506   00073A                     
   507                           ;main.c: 26:     }
   508   00073A  4A14               	infsnz	main@i^0,f,c
   509   00073C  2A15               	incf	(main@i+1)^0,f,c
   510   00073E  BE15               	btfsc	(main@i+1)^0,7,c
   511   000740  EFAB  F003         	goto	u61
   512   000744  5015               	movf	(main@i+1)^0,w,c
   513   000746  E10A               	bnz	u60
   514   000748  0E05               	movlw	5
   515   00074A  5C14               	subwf	main@i^0,w,c
   516   00074C  A0D8               	btfss	status,0,c
   517   00074E  EFAB  F003         	goto	u61
   518   000752  EFAE  F003         	goto	u60
   519   000756                     u61:
   520   000756  FFFF               	dw	65535	; assembler added errata NOP
   521   000758  EF94  F003         	goto	l728
   522   00075C                     u60:
   523   00075C  FFFF               	dw	65535	; assembler added errata NOP
   524   00075E  EFFE  F01F         	goto	start
   525   000762                     __end_of_main:
   526                           	callstack 0
   527                           
   528                           	psect	smallconst
   529   000600                     __psmallconst:
   530                           	callstack 0
   531   000600  00                 	db	0
   532   000601  00                 	db	0	; dummy byte at the end
   533   000600                     __smallconst    set	__psmallconst
   534   000600                     __mediumconst   set	__psmallconst
   535   000000                     __activetblptr  equ	0
   536                           
   537                           	psect	rparam
   538   000001                     ___rparam_used  equ	1
   539   000000                     ___param_bank   equ	0
   540   000000                     __Lparam        equ	__Lrparam
   541   000000                     __Hparam        equ	__Hrparam
   542                           tosu	equ	0xFFF
   543                           tosh	equ	0xFFE
   544                           tosl	equ	0xFFD
   545                           stkptr	equ	0xFFC
   546                           pclatu	equ	0xFFB
   547                           pclath	equ	0xFFA
   548                           pcl	equ	0xFF9
   549                           tblptru	equ	0xFF8
   550                           tblptrh	equ	0xFF7
   551                           tblptrl	equ	0xFF6
   552                           tablat	equ	0xFF5
   553                           prodh	equ	0xFF4
   554                           prodl	equ	0xFF3
   555                           indf0	equ	0xFEF
   556                           postinc0	equ	0xFEE
   557                           postdec0	equ	0xFED
   558                           preinc0	equ	0xFEC
   559                           plusw0	equ	0xFEB
   560                           fsr0h	equ	0xFEA
   561                           fsr0l	equ	0xFE9
   562                           wreg	equ	0xFE8
   563                           indf1	equ	0xFE7
   564                           postinc1	equ	0xFE6
   565                           postdec1	equ	0xFE5
   566                           preinc1	equ	0xFE4
   567                           plusw1	equ	0xFE3
   568                           fsr1h	equ	0xFE2
   569                           fsr1l	equ	0xFE1
   570                           bsr	equ	0xFE0
   571                           indf2	equ	0xFDF
   572                           postinc2	equ	0xFDE
   573                           postdec2	equ	0xFDD
   574                           preinc2	equ	0xFDC
   575                           plusw2	equ	0xFDB
   576                           fsr2h	equ	0xFDA
   577                           fsr2l	equ	0xFD9
   578                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     21      31
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0     330
                                              0 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          127      0       0      0.0%
COMRAM             127     21      31     24.4%
BITBIGSFRh         126      0       0      0.0%
BITBIGSFRl           1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      31      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu May 08 11:31:24 2025

                                                   l12 071E  
                                                   l18 075E  
                                                   u11 060E  
                                                   u20 064A  
                                                   u21 0644  
                                                   u30 068A  
                                                   u31 0684  
                                                   u40 06F8  
                                                   u41 06F2  
                                                   u50 071C  
                                                   u51 0716  
                                                   u60 075C  
                                                   u61 0756  
                                                  l710 06A0  
                                                  l702 061E  
                                                  l720 06FE  
                                                  l712 06C0  
                                                  l730 073A  
                                                  l722 0720  
                                                  l714 06D4  
                                                  l706 0650  
                                                  l732 073E  
                                                  l716 06DA  
                                                  l708 068C  
                                                  l718 06F8  
                                                  l728 0728  
                                                  l694 0602  
                                                  l696 0616  
                                                  wreg 0FE8  
                                                 _main 0602  
                                                 fsr1h 0FE2  
                                                 fsr2h 0FDA  
                                                 indf2 0FDF  
                                                 fsr1l 0FE1  
                                                 fsr2l 0FD9  
                                                 prodl 0FF3  
                                                 start 3FFC  
                                         ___param_bank 0000  
                                                ?_main 0001  
                                                _PORTB 0F81  
                                                _TRISB 0F93  
                                         main@num_desc 0008  
                                                main@i 0014  
                                                main@j 0012  
                                                tablat 0FF5  
                                                plusw1 0FE3  
                                                plusw2 0FDB  
                                                status 0FD8  
                                      __initialization 0762  
                                         __end_of_main 0762  
                                               ??_main 0001  
                                        __activetblptr 0000  
                                               isa$std 0001  
                                         __pdataCOMRAM 0016  
                                         __mediumconst 0600  
                                               tblptrh 0FF7  
                                               tblptrl 0FF6  
                                               tblptru 0FF8  
                                           __accesstop 0080  
                              __end_of__initialization 0782  
                                        ___rparam_used 0001  
                                       __pcstackCOMRAM 0001  
                                              __Hparam 0000  
                                              __Lparam 0000  
                                         __psmallconst 0600  
                                              __pcinit 0762  
                                              __ramtop 0600  
                                              __ptext0 0602  
                                 end_of_initialization 0782  
                                              postdec1 0FE5  
                                              postdec2 0FDD  
                                              postinc0 0FEE  
                                              postinc1 0FE6  
                                              postinc2 0FDE  
                                        __pidataCOMRAM 0788  
                                  start_initialization 0762  
                                          __smallconst 0600  
                                            main@F2542 0016  
                                            copy_data0 0776  
                                             __Hrparam 0000  
                                             __Lrparam 0000  
                                             isa$xinst 0000  
                                             main@temp 0006  
