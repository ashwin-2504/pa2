

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu May 08 15:58:41 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17   000000                     
    18                           ; Generated 17/01/2025 GMT
    19                           ; 
    20                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000FE0                     bsr             equ	4064
    53   000FE9                     fsr0            equ	4073
    54   000FEA                     fsr0h           equ	4074
    55   000FE9                     fsr0l           equ	4073
    56   000FE1                     fsr1            equ	4065
    57   000FE2                     fsr1h           equ	4066
    58   000FE1                     fsr1l           equ	4065
    59   000FD9                     fsr2            equ	4057
    60   000FDA                     fsr2h           equ	4058
    61   000FD9                     fsr2l           equ	4057
    62   000FEF                     indf0           equ	4079
    63   000FE7                     indf1           equ	4071
    64   000FDF                     indf2           equ	4063
    65   000FF2                     intcon          equ	4082
    66   000000                     nvmcon          equ	0
    67   000FF9                     pcl             equ	4089
    68   000FFA                     pclath          equ	4090
    69   000FFB                     pclatu          equ	4091
    70   000FEB                     plusw0          equ	4075
    71   000FE3                     plusw1          equ	4067
    72   000FDB                     plusw2          equ	4059
    73   000FED                     postdec0        equ	4077
    74   000FE5                     postdec1        equ	4069
    75   000FDD                     postdec2        equ	4061
    76   000FEE                     postinc0        equ	4078
    77   000FE6                     postinc1        equ	4070
    78   000FDE                     postinc2        equ	4062
    79   000FEC                     preinc0         equ	4076
    80   000FE4                     preinc1         equ	4068
    81   000FDC                     preinc2         equ	4060
    82   000FF3                     prod            equ	4083
    83   000FF4                     prodh           equ	4084
    84   000FF3                     prodl           equ	4083
    85   000FD8                     status          equ	4056
    86   000FF5                     tablat          equ	4085
    87   000FF6                     tblptr          equ	4086
    88   000FF7                     tblptrh         equ	4087
    89   000FF6                     tblptrl         equ	4086
    90   000FF8                     tblptru         equ	4088
    91   000FFD                     tosl            equ	4093
    92   000FE8                     wreg            equ	4072
    93   000F62                     SPPDATA         equ	3938	;# 
    94   000F63                     SPPCFG          equ	3939	;# 
    95   000F64                     SPPEPS          equ	3940	;# 
    96   000F65                     SPPCON          equ	3941	;# 
    97   000F66                     UFRM            equ	3942	;# 
    98   000F66                     UFRML           equ	3942	;# 
    99   000F67                     UFRMH           equ	3943	;# 
   100   000F68                     UIR             equ	3944	;# 
   101   000F69                     UIE             equ	3945	;# 
   102   000F6A                     UEIR            equ	3946	;# 
   103   000F6B                     UEIE            equ	3947	;# 
   104   000F6C                     USTAT           equ	3948	;# 
   105   000F6D                     UCON            equ	3949	;# 
   106   000F6E                     UADDR           equ	3950	;# 
   107   000F6F                     UCFG            equ	3951	;# 
   108   000F70                     UEP0            equ	3952	;# 
   109   000F71                     UEP1            equ	3953	;# 
   110   000F72                     UEP2            equ	3954	;# 
   111   000F73                     UEP3            equ	3955	;# 
   112   000F74                     UEP4            equ	3956	;# 
   113   000F75                     UEP5            equ	3957	;# 
   114   000F76                     UEP6            equ	3958	;# 
   115   000F77                     UEP7            equ	3959	;# 
   116   000F78                     UEP8            equ	3960	;# 
   117   000F79                     UEP9            equ	3961	;# 
   118   000F7A                     UEP10           equ	3962	;# 
   119   000F7B                     UEP11           equ	3963	;# 
   120   000F7C                     UEP12           equ	3964	;# 
   121   000F7D                     UEP13           equ	3965	;# 
   122   000F7E                     UEP14           equ	3966	;# 
   123   000F7F                     UEP15           equ	3967	;# 
   124   000F80                     PORTA           equ	3968	;# 
   125   000F81                     PORTB           equ	3969	;# 
   126   000F82                     PORTC           equ	3970	;# 
   127   000F83                     PORTD           equ	3971	;# 
   128   000F84                     PORTE           equ	3972	;# 
   129   000F89                     LATA            equ	3977	;# 
   130   000F8A                     LATB            equ	3978	;# 
   131   000F8B                     LATC            equ	3979	;# 
   132   000F8C                     LATD            equ	3980	;# 
   133   000F8D                     LATE            equ	3981	;# 
   134   000F92                     TRISA           equ	3986	;# 
   135   000F92                     DDRA            equ	3986	;# 
   136   000F93                     TRISB           equ	3987	;# 
   137   000F93                     DDRB            equ	3987	;# 
   138   000F94                     TRISC           equ	3988	;# 
   139   000F94                     DDRC            equ	3988	;# 
   140   000F95                     TRISD           equ	3989	;# 
   141   000F95                     DDRD            equ	3989	;# 
   142   000F96                     TRISE           equ	3990	;# 
   143   000F96                     DDRE            equ	3990	;# 
   144   000F9B                     OSCTUNE         equ	3995	;# 
   145   000F9D                     PIE1            equ	3997	;# 
   146   000F9E                     PIR1            equ	3998	;# 
   147   000F9F                     IPR1            equ	3999	;# 
   148   000FA0                     PIE2            equ	4000	;# 
   149   000FA1                     PIR2            equ	4001	;# 
   150   000FA2                     IPR2            equ	4002	;# 
   151   000FA6                     EECON1          equ	4006	;# 
   152   000FA7                     EECON2          equ	4007	;# 
   153   000FA8                     EEDATA          equ	4008	;# 
   154   000FA9                     EEADR           equ	4009	;# 
   155   000FAB                     RCSTA           equ	4011	;# 
   156   000FAB                     RCSTA1          equ	4011	;# 
   157   000FAC                     TXSTA           equ	4012	;# 
   158   000FAC                     TXSTA1          equ	4012	;# 
   159   000FAD                     TXREG           equ	4013	;# 
   160   000FAD                     TXREG1          equ	4013	;# 
   161   000FAE                     RCREG           equ	4014	;# 
   162   000FAE                     RCREG1          equ	4014	;# 
   163   000FAF                     SPBRG           equ	4015	;# 
   164   000FAF                     SPBRG1          equ	4015	;# 
   165   000FB0                     SPBRGH          equ	4016	;# 
   166   000FB1                     T3CON           equ	4017	;# 
   167   000FB2                     TMR3            equ	4018	;# 
   168   000FB2                     TMR3L           equ	4018	;# 
   169   000FB3                     TMR3H           equ	4019	;# 
   170   000FB4                     CMCON           equ	4020	;# 
   171   000FB5                     CVRCON          equ	4021	;# 
   172   000FB6                     ECCP1AS         equ	4022	;# 
   173   000FB6                     CCP1AS          equ	4022	;# 
   174   000FB7                     ECCP1DEL        equ	4023	;# 
   175   000FB7                     CCP1DEL         equ	4023	;# 
   176   000FB8                     BAUDCON         equ	4024	;# 
   177   000FB8                     BAUDCTL         equ	4024	;# 
   178   000FBA                     CCP2CON         equ	4026	;# 
   179   000FBB                     CCPR2           equ	4027	;# 
   180   000FBB                     CCPR2L          equ	4027	;# 
   181   000FBC                     CCPR2H          equ	4028	;# 
   182   000FBD                     CCP1CON         equ	4029	;# 
   183   000FBD                     ECCP1CON        equ	4029	;# 
   184   000FBE                     CCPR1           equ	4030	;# 
   185   000FBE                     CCPR1L          equ	4030	;# 
   186   000FBF                     CCPR1H          equ	4031	;# 
   187   000FC0                     ADCON2          equ	4032	;# 
   188   000FC1                     ADCON1          equ	4033	;# 
   189   000FC2                     ADCON0          equ	4034	;# 
   190   000FC3                     ADRES           equ	4035	;# 
   191   000FC3                     ADRESL          equ	4035	;# 
   192   000FC4                     ADRESH          equ	4036	;# 
   193   000FC5                     SSPCON2         equ	4037	;# 
   194   000FC6                     SSPCON1         equ	4038	;# 
   195   000FC7                     SSPSTAT         equ	4039	;# 
   196   000FC8                     SSPADD          equ	4040	;# 
   197   000FC9                     SSPBUF          equ	4041	;# 
   198   000FCA                     T2CON           equ	4042	;# 
   199   000FCB                     PR2             equ	4043	;# 
   200   000FCB                     MEMCON          equ	4043	;# 
   201   000FCC                     TMR2            equ	4044	;# 
   202   000FCD                     T1CON           equ	4045	;# 
   203   000FCE                     TMR1            equ	4046	;# 
   204   000FCE                     TMR1L           equ	4046	;# 
   205   000FCF                     TMR1H           equ	4047	;# 
   206   000FD0                     RCON            equ	4048	;# 
   207   000FD1                     WDTCON          equ	4049	;# 
   208   000FD2                     HLVDCON         equ	4050	;# 
   209   000FD2                     LVDCON          equ	4050	;# 
   210   000FD3                     OSCCON          equ	4051	;# 
   211   000FD5                     T0CON           equ	4053	;# 
   212   000FD6                     TMR0            equ	4054	;# 
   213   000FD6                     TMR0L           equ	4054	;# 
   214   000FD7                     TMR0H           equ	4055	;# 
   215   000FD8                     STATUS          equ	4056	;# 
   216   000FD9                     FSR2            equ	4057	;# 
   217   000FD9                     FSR2L           equ	4057	;# 
   218   000FDA                     FSR2H           equ	4058	;# 
   219   000FDB                     PLUSW2          equ	4059	;# 
   220   000FDC                     PREINC2         equ	4060	;# 
   221   000FDD                     POSTDEC2        equ	4061	;# 
   222   000FDE                     POSTINC2        equ	4062	;# 
   223   000FDF                     INDF2           equ	4063	;# 
   224   000FE0                     BSR             equ	4064	;# 
   225   000FE1                     FSR1            equ	4065	;# 
   226   000FE1                     FSR1L           equ	4065	;# 
   227   000FE2                     FSR1H           equ	4066	;# 
   228   000FE3                     PLUSW1          equ	4067	;# 
   229   000FE4                     PREINC1         equ	4068	;# 
   230   000FE5                     POSTDEC1        equ	4069	;# 
   231   000FE6                     POSTINC1        equ	4070	;# 
   232   000FE7                     INDF1           equ	4071	;# 
   233   000FE8                     WREG            equ	4072	;# 
   234   000FE9                     FSR0            equ	4073	;# 
   235   000FE9                     FSR0L           equ	4073	;# 
   236   000FEA                     FSR0H           equ	4074	;# 
   237   000FEB                     PLUSW0          equ	4075	;# 
   238   000FEC                     PREINC0         equ	4076	;# 
   239   000FED                     POSTDEC0        equ	4077	;# 
   240   000FEE                     POSTINC0        equ	4078	;# 
   241   000FEF                     INDF0           equ	4079	;# 
   242   000FF0                     INTCON3         equ	4080	;# 
   243   000FF1                     INTCON2         equ	4081	;# 
   244   000FF2                     INTCON          equ	4082	;# 
   245   000FF3                     PROD            equ	4083	;# 
   246   000FF3                     PRODL           equ	4083	;# 
   247   000FF4                     PRODH           equ	4084	;# 
   248   000FF5                     TABLAT          equ	4085	;# 
   249   000FF6                     TBLPTR          equ	4086	;# 
   250   000FF6                     TBLPTRL         equ	4086	;# 
   251   000FF7                     TBLPTRH         equ	4087	;# 
   252   000FF8                     TBLPTRU         equ	4088	;# 
   253   000FF9                     PCLAT           equ	4089	;# 
   254   000FF9                     PC              equ	4089	;# 
   255   000FF9                     PCL             equ	4089	;# 
   256   000FFA                     PCLATH          equ	4090	;# 
   257   000FFB                     PCLATU          equ	4091	;# 
   258   000FFC                     STKPTR          equ	4092	;# 
   259   000FFD                     TOS             equ	4093	;# 
   260   000FFD                     TOSL            equ	4093	;# 
   261   000FFE                     TOSH            equ	4094	;# 
   262   000FFF                     TOSU            equ	4095	;# 
   263                           
   264                           	psect	idataCOMRAM
   265   000901                     __pidataCOMRAM:
   266                           	callstack 0
   267                           
   268                           ;initializer for _string5
   269   000901  0A                 	db	10
   270   000902  0D                 	db	13
   271   000903  52                 	db	82
   272   000904  78                 	db	120
   273   000905  20                 	db	32
   274   000906  54                 	db	84
   275   000907  78                 	db	120
   276   000908  20                 	db	32
   277   000909  74                 	db	116
   278   00090A  65                 	db	101
   279   00090B  73                 	db	115
   280   00090C  74                 	db	116
   281   00090D  20                 	db	32
   282   00090E  63                 	db	99
   283   00090F  6F                 	db	111
   284   000910  6D                 	db	109
   285   000911  70                 	db	112
   286   000912  6C                 	db	108
   287   000913  65                 	db	101
   288   000914  74                 	db	116
   289   000915  65                 	db	101
   290   000916  0A                 	db	10
   291   000917  0D                 	db	13
   292   000918  00                 	db	0
   293                           
   294                           ;initializer for _string2
   295   000919  0A                 	db	10
   296   00091A  0D                 	db	13
   297   00091B  55                 	db	85
   298   00091C  53                 	db	83
   299   00091D  41                 	db	65
   300   00091E  52                 	db	82
   301   00091F  54                 	db	84
   302   000920  20                 	db	32
   303   000921  54                 	db	84
   304   000922  65                 	db	101
   305   000923  73                 	db	115
   306   000924  74                 	db	116
   307   000925  20                 	db	32
   308   000926  43                 	db	67
   309   000927  6F                 	db	111
   310   000928  64                 	db	100
   311   000929  65                 	db	101
   312   00092A  00                 	db	0
   313                           
   314                           ;initializer for _string1
   315   00092B  0A                 	db	10
   316   00092C  0D                 	db	13
   317   00092D  50                 	db	80
   318   00092E  52                 	db	82
   319   00092F  45                 	db	69
   320   000930  43                 	db	67
   321   000931  20                 	db	32
   322   000932  4C                 	db	76
   323   000933  6F                 	db	111
   324   000934  6E                 	db	110
   325   000935  69                 	db	105
   326   000936  00                 	db	0
   327                           
   328                           	psect	idataBANK0
   329   0008C6                     __pidataBANK0:
   330                           	callstack 0
   331                           
   332                           ;initializer for _string4
   333   0008C6  0A                 	db	10
   334   0008C7  0D                 	db	13
   335   0008C8  54                 	db	84
   336   0008C9  72                 	db	114
   337   0008CA  61                 	db	97
   338   0008CB  6E                 	db	110
   339   0008CC  73                 	db	115
   340   0008CD  6D                 	db	109
   341   0008CE  69                 	db	105
   342   0008CF  74                 	db	116
   343   0008D0  74                 	db	116
   344   0008D1  65                 	db	101
   345   0008D2  64                 	db	100
   346   0008D3  20                 	db	32
   347   0008D4  43                 	db	67
   348   0008D5  68                 	db	104
   349   0008D6  61                 	db	97
   350   0008D7  72                 	db	114
   351   0008D8  61                 	db	97
   352   0008D9  63                 	db	99
   353   0008DA  74                 	db	116
   354   0008DB  65                 	db	101
   355   0008DC  72                 	db	114
   356   0008DD  73                 	db	115
   357   0008DE  20                 	db	32
   358   0008DF  61                 	db	97
   359   0008E0  72                 	db	114
   360   0008E1  65                 	db	101
   361   0008E2  3A                 	db	58
   362   0008E3  00                 	db	0
   363                           
   364                           ;initializer for _string3
   365   0008E4  0A                 	db	10
   366   0008E5  0D                 	db	13
   367   0008E6  53                 	db	83
   368   0008E7  65                 	db	101
   369   0008E8  6E                 	db	110
   370   0008E9  64                 	db	100
   371   0008EA  20                 	db	32
   372   0008EB  31                 	db	49
   373   0008EC  30                 	db	48
   374   0008ED  20                 	db	32
   375   0008EE  63                 	db	99
   376   0008EF  68                 	db	104
   377   0008F0  61                 	db	97
   378   0008F1  72                 	db	114
   379   0008F2  61                 	db	97
   380   0008F3  63                 	db	99
   381   0008F4  74                 	db	116
   382   0008F5  65                 	db	101
   383   0008F6  72                 	db	114
   384   0008F7  73                 	db	115
   385   0008F8  20                 	db	32
   386   0008F9  74                 	db	116
   387   0008FA  6F                 	db	111
   388   0008FB  20                 	db	32
   389   0008FC  75                 	db	117
   390   0008FD  43                 	db	67
   391   0008FE  0A                 	db	10
   392   0008FF  0D                 	db	13
   393   000900  00                 	db	0
   394   000FAD                     _TXREG          set	4013
   395   000FAE                     _RCREG          set	4014
   396   000F9E                     _PIR1bits       set	3998
   397   000FAB                     _RCSTAbits      set	4011
   398   000FAC                     _TXSTAbits      set	4012
   399   000FB8                     _BAUDCONbits    set	4024
   400   000FAF                     _SPBRG          set	4015
   401   000FB0                     _SPBRGH         set	4016
   402   000F94                     _TRISCbits      set	3988
   403                           
   404                           ; #config settings
   405                           
   406                           	psect	cinit
   407   000880                     __pcinit:
   408                           	callstack 0
   409   000880                     start_initialization:
   410                           	callstack 0
   411   000880                     __initialization:
   412                           	callstack 0
   413                           
   414                           ; Initialize objects allocated to BANK0 (59 bytes)
   415                           ; load TBLPTR registers with __pidataBANK0
   416   000880  0EC6               	movlw	low __pidataBANK0
   417   000882  6EF6               	movwf	tblptrl,c
   418   000884  0E08               	movlw	high __pidataBANK0
   419   000886  6EF7               	movwf	tblptrh,c
   420   000888  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   421   00088A  6EF8               	movwf	tblptru,c
   422   00088C  EE00  F060         	lfsr	0,__pdataBANK0
   423   000890  EE10 F03B          	lfsr	1,59
   424   000894                     copy_data0:
   425   000894  0009               	tblrd		*+
   426   000896  CFF5 FFEE          	movff	tablat,postinc0
   427   00089A  50E5               	movf	postdec1,w,c
   428   00089C  50E1               	movf	fsr1l,w,c
   429   00089E  E1FA               	bnz	copy_data0
   430                           
   431                           ; Initialize objects allocated to COMRAM (54 bytes)
   432                           ; load TBLPTR registers with __pidataCOMRAM
   433   0008A0  0E01               	movlw	low __pidataCOMRAM
   434   0008A2  6EF6               	movwf	tblptrl,c
   435   0008A4  0E09               	movlw	high __pidataCOMRAM
   436   0008A6  6EF7               	movwf	tblptrh,c
   437   0008A8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   438   0008AA  6EF8               	movwf	tblptru,c
   439   0008AC  EE00  F001         	lfsr	0,__pdataCOMRAM
   440   0008B0  EE10 F036          	lfsr	1,54
   441   0008B4                     copy_data1:
   442   0008B4  0009               	tblrd		*+
   443   0008B6  CFF5 FFEE          	movff	tablat,postinc0
   444   0008BA  50E5               	movf	postdec1,w,c
   445   0008BC  50E1               	movf	fsr1l,w,c
   446   0008BE  E1FA               	bnz	copy_data1
   447   0008C0                     end_of_initialization:
   448                           	callstack 0
   449   0008C0                     __end_of__initialization:
   450                           	callstack 0
   451   0008C0  0100               	movlb	0
   452   0008C2  EF01  F004         	goto	_main	;jump to C main() function
   453                           
   454                           	psect	dataCOMRAM
   455   000001                     __pdataCOMRAM:
   456                           	callstack 0
   457   000001                     _string5:
   458                           	callstack 0
   459   000001                     	ds	24
   460   000019                     _string2:
   461                           	callstack 0
   462   000019                     	ds	18
   463   00002B                     _string1:
   464                           	callstack 0
   465   00002B                     	ds	12
   466                           
   467                           	psect	dataBANK0
   468   000060                     __pdataBANK0:
   469                           	callstack 0
   470   000060                     _string4:
   471                           	callstack 0
   472   000060                     	ds	30
   473   00007E                     _string3:
   474                           	callstack 0
   475   00007E                     	ds	29
   476                           
   477                           	psect	cstackCOMRAM
   478   000037                     __pcstackCOMRAM:
   479                           	callstack 0
   480   000037                     TXbyte@data:
   481                           	callstack 0
   482   000037                     
   483                           ; 1 bytes @ 0x0
   484   000037                     	ds	1
   485   000038                     TXstring@string:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x1
   489   000038                     	ds	1
   490   000039                     main@rx_data:
   491                           	callstack 0
   492   000039                     
   493                           ; 1 bytes @ 0x2
   494   000039                     	ds	20
   495   00004D                     main@i:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x16
   499   00004D                     	ds	1
   500                           
   501 ;;
   502 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   503 ;;
   504 ;; *************** function _main *****************
   505 ;; Defined at:
   506 ;;		line 14 in file "main.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;  rx_data        20    2[COMRAM] unsigned char [20]
   511 ;;  i               1   22[COMRAM] unsigned char 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   521 ;;      Params:         0       0       0       0       0       0       0       0       0
   522 ;;      Locals:        21       0       0       0       0       0       0       0       0
   523 ;;      Temps:          0       0       0       0       0       0       0       0       0
   524 ;;      Totals:        21       0       0       0       0       0       0       0       0
   525 ;;Total ram usage:       21 bytes
   526 ;; Hardware stack levels required when called: 2
   527 ;; This function calls:
   528 ;;		_TXstring
   529 ;; This function is called by:
   530 ;;		Startup code after reset
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text0
   535   000802                     __ptext0:
   536                           	callstack 0
   537   000802                     _main:
   538                           	callstack 29
   539   000802                     
   540                           ;main.c: 15:     unsigned char i;;main.c: 16:     unsigned char rx_data[20];;main.c: 18:
      +                               TRISCbits.TRISC7 = 1;
   541   000802  8E94               	bsf	148,7,c	;volatile
   542                           
   543                           ;main.c: 19:     TRISCbits.TRISC6 = 0;
   544   000804  9C94               	bcf	148,6,c	;volatile
   545   000806                     
   546                           ;main.c: 22:     SPBRGH = 0x04;
   547   000806  0E04               	movlw	4
   548   000808  6EB0               	movwf	176,c	;volatile
   549                           
   550                           ;main.c: 23:     SPBRG = 0xE1;
   551   00080A  0EE1               	movlw	225
   552   00080C  6EAF               	movwf	175,c	;volatile
   553   00080E                     
   554                           ;main.c: 24:     BAUDCONbits.BRG16 = 1;
   555   00080E  86B8               	bsf	184,3,c	;volatile
   556   000810                     
   557                           ;main.c: 25:     TXSTAbits.BRGH = 1;
   558   000810  84AC               	bsf	172,2,c	;volatile
   559   000812                     
   560                           ;main.c: 26:     TXSTAbits.TXEN = 1;
   561   000812  8AAC               	bsf	172,5,c	;volatile
   562   000814                     
   563                           ;main.c: 27:     RCSTAbits.SPEN = 1;
   564   000814  8EAB               	bsf	171,7,c	;volatile
   565   000816                     
   566                           ;main.c: 28:     RCSTAbits.CREN = 1;
   567   000816  88AB               	bsf	171,4,c	;volatile
   568   000818                     
   569                           ;main.c: 30:     TXstring(string1);
   570   000818  0E2B               	movlw	low _string1
   571   00081A  6E38               	movwf	TXstring@string^0,c
   572   00081C  EC9C  F004         	call	_TXstring	;wreg free
   573   000820                     
   574                           ;main.c: 31:     TXstring(string2);
   575   000820  0E19               	movlw	low _string2
   576   000822  6E38               	movwf	TXstring@string^0,c
   577   000824  EC9C  F004         	call	_TXstring	;wreg free
   578   000828                     
   579                           ;main.c: 32:     TXstring(string3);
   580   000828  0E7E               	movlw	low _string3
   581   00082A  6E38               	movwf	TXstring@string^0,c
   582   00082C  EC9C  F004         	call	_TXstring	;wreg free
   583   000830                     
   584                           ;main.c: 34:     for (i = 0; i < 10; i++) {
   585   000830  6A4D               	clrf	main@i^0,c
   586   000832                     l37:
   587   000832  AA9E               	btfss	158,5,c	;volatile
   588   000834  EF1E  F004         	goto	u71
   589   000838  EF20  F004         	goto	u70
   590   00083C                     u71:
   591   00083C  EF19  F004         	goto	l37
   592   000840                     u70:
   593   000840                     
   594                           ;main.c: 36:         rx_data[i] = RCREG;
   595   000840  504D               	movf	main@i^0,w,c
   596   000842  0F39               	addlw	low main@rx_data
   597   000844  6ED9               	movwf	fsr2l,c
   598   000846  6ADA               	clrf	fsr2h,c
   599   000848  CFAE FFDF          	movff	4014,indf2	;volatile
   600   00084C                     
   601                           ;main.c: 37:     }
   602   00084C  2A4D               	incf	main@i^0,f,c
   603   00084E  0E09               	movlw	9
   604   000850  644D               	cpfsgt	main@i^0,c
   605   000852  EF2D  F004         	goto	u81
   606   000856  EF2F  F004         	goto	u80
   607   00085A                     u81:
   608   00085A  EF19  F004         	goto	l37
   609   00085E                     u80:
   610   00085E                     
   611                           ;main.c: 39:     rx_data[10] = '\0';
   612   00085E  6A43               	clrf	(main@rx_data+10)^0,c
   613   000860                     
   614                           ;main.c: 41:     TXstring(string4);
   615   000860  0E60               	movlw	low _string4
   616   000862  6E38               	movwf	TXstring@string^0,c
   617   000864  EC9C  F004         	call	_TXstring	;wreg free
   618                           
   619                           ;main.c: 42:     TXstring(rx_data);
   620   000868  0E39               	movlw	low main@rx_data
   621   00086A  6E38               	movwf	TXstring@string^0,c
   622   00086C  EC9C  F004         	call	_TXstring	;wreg free
   623                           
   624                           ;main.c: 43:     TXstring(string5);
   625   000870  0E01               	movlw	low _string5
   626   000872  6E38               	movwf	TXstring@string^0,c
   627   000874  EC9C  F004         	call	_TXstring	;wreg free
   628   000878                     l40:
   629   000878  EF3C  F004         	goto	l40
   630   00087C  EFFE  F03F         	goto	start
   631   000880                     __end_of_main:
   632                           	callstack 0
   633                           
   634 ;; *************** function _TXstring *****************
   635 ;; Defined at:
   636 ;;		line 53 in file "main.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;  string          1    1[COMRAM] PTR unsigned char 
   639 ;;		 -> string5(24), string4(30), main@rx_data(20), string3(29), 
   640 ;;		 -> string2(18), string1(12), 
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   652 ;;      Params:         1       0       0       0       0       0       0       0       0
   653 ;;      Locals:         0       0       0       0       0       0       0       0       0
   654 ;;      Temps:          0       0       0       0       0       0       0       0       0
   655 ;;      Totals:         1       0       0       0       0       0       0       0       0
   656 ;;Total ram usage:        1 bytes
   657 ;; Hardware stack levels used: 1
   658 ;; Hardware stack levels required when called: 1
   659 ;; This function calls:
   660 ;;		_TXbyte
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           	psect	text1
   667   000938                     __ptext1:
   668                           	callstack 0
   669   000938                     _TXstring:
   670                           	callstack 29
   671   000938                     
   672                           ;main.c: 54:     while (*string != '\0') {
   673   000938  EFA5  F004         	goto	l787
   674   00093C                     l783:
   675                           
   676                           ;main.c: 55:         TXbyte(*string);
   677   00093C  5038               	movf	TXstring@string^0,w,c
   678   00093E  6ED9               	movwf	fsr2l,c
   679   000940  6ADA               	clrf	fsr2h,c
   680   000942  50DF               	movf	indf2,w,c
   681   000944  ECB1  F004         	call	_TXbyte
   682   000948                     
   683                           ;main.c: 56:         string++;
   684   000948  2A38               	incf	TXstring@string^0,f,c
   685   00094A                     l787:
   686                           
   687                           ;main.c: 54:     while (*string != '\0') {
   688   00094A  5038               	movf	TXstring@string^0,w,c
   689   00094C  6ED9               	movwf	fsr2l,c
   690   00094E  6ADA               	clrf	fsr2h,c
   691   000950  50DF               	movf	indf2,w,c
   692   000952  A4D8               	btfss	status,2,c
   693   000954  EFAE  F004         	goto	u61
   694   000958  EFB0  F004         	goto	u60
   695   00095C                     u61:
   696   00095C  EF9E  F004         	goto	l783
   697   000960                     u60:
   698   000960  0012               	return		;funcret
   699   000962                     __end_of_TXstring:
   700                           	callstack 0
   701                           
   702 ;; *************** function _TXbyte *****************
   703 ;; Defined at:
   704 ;;		line 48 in file "main.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  data            1    wreg     unsigned char 
   707 ;; Auto vars:     Size  Location     Type
   708 ;;  data            1    0[COMRAM] unsigned char 
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		wreg
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   718 ;;      Params:         0       0       0       0       0       0       0       0       0
   719 ;;      Locals:         1       0       0       0       0       0       0       0       0
   720 ;;      Temps:          0       0       0       0       0       0       0       0       0
   721 ;;      Totals:         1       0       0       0       0       0       0       0       0
   722 ;;Total ram usage:        1 bytes
   723 ;; Hardware stack levels used: 1
   724 ;; This function calls:
   725 ;;		Nothing
   726 ;; This function is called by:
   727 ;;		_TXstring
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text2
   732   000962                     __ptext2:
   733                           	callstack 0
   734   000962                     _TXbyte:
   735                           	callstack 29
   736                           
   737                           ;incstack = 0
   738                           ;TXbyte@data stored from wreg
   739   000962  6E37               	movwf	TXbyte@data^0,c
   740   000964                     l46:
   741   000964  A2AC               	btfss	172,1,c	;volatile
   742   000966  EFB7  F004         	goto	u51
   743   00096A  EFB9  F004         	goto	u50
   744   00096E                     u51:
   745   00096E  EFB2  F004         	goto	l46
   746   000972                     u50:
   747   000972                     
   748                           ;main.c: 50:     TXREG = data;
   749   000972  C037  FFAD         	movff	TXbyte@data,4013	;volatile
   750   000976  0012               	return		;funcret
   751   000978                     __end_of_TXbyte:
   752                           	callstack 0
   753                           
   754                           	psect	smallconst
   755   000800                     __psmallconst:
   756                           	callstack 0
   757   000800  00                 	db	0
   758   000801  00                 	db	0	; dummy byte at the end
   759   000800                     __smallconst    set	__psmallconst
   760   000800                     __mediumconst   set	__psmallconst
   761   000000                     __activetblptr  equ	0
   762                           
   763                           	psect	rparam
   764   000001                     ___rparam_used  equ	1
   765   000000                     ___param_bank   equ	0
   766   000000                     __Lparam        equ	__Lrparam
   767   000000                     __Hparam        equ	__Hrparam
   768                           tosu	equ	0xFFF
   769                           tosh	equ	0xFFE
   770                           tosl	equ	0xFFD
   771                           stkptr	equ	0xFFC
   772                           pclatu	equ	0xFFB
   773                           pclath	equ	0xFFA
   774                           pcl	equ	0xFF9
   775                           tblptru	equ	0xFF8
   776                           tblptrh	equ	0xFF7
   777                           tblptrl	equ	0xFF6
   778                           tablat	equ	0xFF5
   779                           prodh	equ	0xFF4
   780                           prodl	equ	0xFF3
   781                           indf0	equ	0xFEF
   782                           postinc0	equ	0xFEE
   783                           postdec0	equ	0xFED
   784                           preinc0	equ	0xFEC
   785                           plusw0	equ	0xFEB
   786                           fsr0h	equ	0xFEA
   787                           fsr0l	equ	0xFE9
   788                           wreg	equ	0xFE8
   789                           indf1	equ	0xFE7
   790                           postinc1	equ	0xFE6
   791                           postdec1	equ	0xFE5
   792                           preinc1	equ	0xFE4
   793                           plusw1	equ	0xFE3
   794                           fsr1h	equ	0xFE2
   795                           fsr1l	equ	0xFE1
   796                           bsr	equ	0xFE0
   797                           indf2	equ	0xFDF
   798                           postinc2	equ	0xFDE
   799                           postdec2	equ	0xFDD
   800                           preinc2	equ	0xFDC
   801                           plusw2	equ	0xFDB
   802                           fsr2h	equ	0xFDA
   803                           fsr2l	equ	0xFD9
   804                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        113
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      77
    BANK0           160      0      59
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    TXstring@string	PTR unsigned char  size(1) Largest target is 30
		 -> main@rx_data(COMRAM[20]), string1(COMRAM[12]), string2(COMRAM[18]), string3(BANK0[29]), 
		 -> string4(BANK0[30]), string5(COMRAM[24]), 


Critical Paths under _main in COMRAM

    _main->_TXstring
    _TXstring->_TXbyte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0     220
                                              2 COMRAM    21    21      0
                           _TXstring
 ---------------------------------------------------------------------------------
 (1) _TXstring                                             1     0      1      80
                                              1 COMRAM     1     0      1
                             _TXbyte
 ---------------------------------------------------------------------------------
 (2) _TXbyte                                               1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TXstring
     _TXbyte

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      59     36.9%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     23      77     81.1%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlll        52      0       0      0.0%
BITBIGSFRllh        22      0       0      0.0%
BITBIGSFRlh          1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     136      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu May 08 15:58:41 2025

                     l40 0878                       l41 0878                       l36 085E  
                     l37 0832                       l46 0964                       l55 0960  
                     l49 0976                       u50 0972                       u51 096E  
                     u60 0960                       u61 095C                       u70 0840  
                     u71 083C                       u80 085E                       u81 085A  
                    l801 0816                      l803 0818                      l821 0860  
                    l805 0820                      l815 0840                      l807 0828  
                    l817 084C                      l809 0830                      l819 084E  
                    l781 0938                      l783 093C                      l791 0806  
                    l777 0964                      l785 0948                      l793 080E  
                    l779 0972                      l787 094A                      l795 0810  
                    l797 0812                      l789 0802                      l799 0814  
                   _main 0802                     fsr2h 0FDA                     indf2 0FDF  
                   fsr1l 0FE1                     fsr2l 0FD9               TXbyte@data 0037  
            main@rx_data 0039                     start 7FFC             ___param_bank 0000  
         TXstring@string 0038                    ?_main 0037                    _RCREG 0FAE  
                  _SPBRG 0FAF                    _TXREG 0FAD                    main@i 004D  
                  tablat 0FF5                    status 0FD8          __initialization 0880  
           __end_of_main 0880                   ??_main 0039         __end_of_TXstring 0962  
          __activetblptr 0000                   _SPBRGH 0FB0                   _TXbyte 0962  
                 isa$std 0001             __pdataCOMRAM 0001             __mediumconst 0800  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 08C0            ___rparam_used 0001  
         __pcstackCOMRAM 0037             __pidataBANK0 08C6                ?_TXstring 0038  
                ?_TXbyte 0037               ??_TXstring 0039                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0800                  __pcinit 0880  
                __ramtop 0800                  __ptext0 0802                  __ptext1 0938  
                __ptext2 0962                  _string1 002B                  _string2 0019  
                _string3 007E                  _string4 0060                  _string5 0001  
   end_of_initialization 08C0                _RCSTAbits 0FAB                  postdec1 0FE5  
                postinc0 0FEE                _TRISCbits 0F94                _TXSTAbits 0FAC  
         __end_of_TXbyte 0978              _BAUDCONbits 0FB8            __pidataCOMRAM 0901  
    start_initialization 0880                 ??_TXbyte 0037              __pdataBANK0 0060  
            __smallconst 0800                 _PIR1bits 0F9E                copy_data0 0894  
              copy_data1 08B4                 _TXstring 0938                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000  
