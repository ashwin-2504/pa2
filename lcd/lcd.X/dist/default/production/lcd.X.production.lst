

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu May 08 15:51:38 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F458
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 17/01/2025 GMT
    21                           ; 
    22                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F458 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000FE0                     bsr             equ	4064
    55   000FE9                     fsr0            equ	4073
    56   000FEA                     fsr0h           equ	4074
    57   000FE9                     fsr0l           equ	4073
    58   000FE1                     fsr1            equ	4065
    59   000FE2                     fsr1h           equ	4066
    60   000FE1                     fsr1l           equ	4065
    61   000FD9                     fsr2            equ	4057
    62   000FDA                     fsr2h           equ	4058
    63   000FD9                     fsr2l           equ	4057
    64   000FEF                     indf0           equ	4079
    65   000FE7                     indf1           equ	4071
    66   000FDF                     indf2           equ	4063
    67   000FF2                     intcon          equ	4082
    68   000000                     nvmcon          equ	0
    69   000FF9                     pcl             equ	4089
    70   000FFA                     pclath          equ	4090
    71   000FFB                     pclatu          equ	4091
    72   000FEB                     plusw0          equ	4075
    73   000FE3                     plusw1          equ	4067
    74   000FDB                     plusw2          equ	4059
    75   000FED                     postdec0        equ	4077
    76   000FE5                     postdec1        equ	4069
    77   000FDD                     postdec2        equ	4061
    78   000FEE                     postinc0        equ	4078
    79   000FE6                     postinc1        equ	4070
    80   000FDE                     postinc2        equ	4062
    81   000FEC                     preinc0         equ	4076
    82   000FE4                     preinc1         equ	4068
    83   000FDC                     preinc2         equ	4060
    84   000FF3                     prod            equ	4083
    85   000FF4                     prodh           equ	4084
    86   000FF3                     prodl           equ	4083
    87   000FD8                     status          equ	4056
    88   000FF5                     tablat          equ	4085
    89   000FF6                     tblptr          equ	4086
    90   000FF7                     tblptrh         equ	4087
    91   000FF6                     tblptrl         equ	4086
    92   000FF8                     tblptru         equ	4088
    93   000FFD                     tosl            equ	4093
    94   000FE8                     wreg            equ	4072
    95   000F00                     RXF0SIDH        equ	3840	;# 
    96   000F01                     RXF0SIDL        equ	3841	;# 
    97   000F02                     RXF0EIDH        equ	3842	;# 
    98   000F03                     RXF0EIDL        equ	3843	;# 
    99   000F04                     RXF1SIDH        equ	3844	;# 
   100   000F05                     RXF1SIDL        equ	3845	;# 
   101   000F06                     RXF1EIDH        equ	3846	;# 
   102   000F07                     RXF1EIDL        equ	3847	;# 
   103   000F08                     RXF2SIDH        equ	3848	;# 
   104   000F09                     RXF2SIDL        equ	3849	;# 
   105   000F0A                     RXF2EIDH        equ	3850	;# 
   106   000F0B                     RXF2EIDL        equ	3851	;# 
   107   000F0C                     RXF3SIDH        equ	3852	;# 
   108   000F0D                     RXF3SIDL        equ	3853	;# 
   109   000F0E                     RXF3EIDH        equ	3854	;# 
   110   000F0F                     RXF3EIDL        equ	3855	;# 
   111   000F10                     RXF4SIDH        equ	3856	;# 
   112   000F11                     RXF4SIDL        equ	3857	;# 
   113   000F12                     RXF4EIDH        equ	3858	;# 
   114   000F13                     RXF4EIDL        equ	3859	;# 
   115   000F14                     RXF5SIDH        equ	3860	;# 
   116   000F15                     RXF5SIDL        equ	3861	;# 
   117   000F16                     RXF5EIDH        equ	3862	;# 
   118   000F17                     RXF5EIDL        equ	3863	;# 
   119   000F18                     RXM0SIDH        equ	3864	;# 
   120   000F19                     RXM0SIDL        equ	3865	;# 
   121   000F1A                     RXM0EIDH        equ	3866	;# 
   122   000F1B                     RXM0EIDL        equ	3867	;# 
   123   000F1C                     RXM1SIDH        equ	3868	;# 
   124   000F1D                     RXM1SIDL        equ	3869	;# 
   125   000F1E                     RXM1EIDH        equ	3870	;# 
   126   000F1F                     RXM1EIDL        equ	3871	;# 
   127   000F20                     TXB2CON         equ	3872	;# 
   128   000F21                     TXB2SIDH        equ	3873	;# 
   129   000F22                     TXB2SIDL        equ	3874	;# 
   130   000F23                     TXB2EIDH        equ	3875	;# 
   131   000F24                     TXB2EIDL        equ	3876	;# 
   132   000F25                     TXB2DLC         equ	3877	;# 
   133   000F26                     TXB2D0          equ	3878	;# 
   134   000F27                     TXB2D1          equ	3879	;# 
   135   000F28                     TXB2D2          equ	3880	;# 
   136   000F29                     TXB2D3          equ	3881	;# 
   137   000F2A                     TXB2D4          equ	3882	;# 
   138   000F2B                     TXB2D5          equ	3883	;# 
   139   000F2C                     TXB2D6          equ	3884	;# 
   140   000F2D                     TXB2D7          equ	3885	;# 
   141   000F2E                     CANSTATRO4      equ	3886	;# 
   142   000F30                     TXB1CON         equ	3888	;# 
   143   000F31                     TXB1SIDH        equ	3889	;# 
   144   000F32                     TXB1SIDL        equ	3890	;# 
   145   000F33                     TXB1EIDH        equ	3891	;# 
   146   000F34                     TXB1EIDL        equ	3892	;# 
   147   000F35                     TXB1DLC         equ	3893	;# 
   148   000F36                     TXB1D0          equ	3894	;# 
   149   000F37                     TXB1D1          equ	3895	;# 
   150   000F38                     TXB1D2          equ	3896	;# 
   151   000F39                     TXB1D3          equ	3897	;# 
   152   000F3A                     TXB1D4          equ	3898	;# 
   153   000F3B                     TXB1D5          equ	3899	;# 
   154   000F3C                     TXB1D6          equ	3900	;# 
   155   000F3D                     TXB1D7          equ	3901	;# 
   156   000F3E                     CANSTATRO3      equ	3902	;# 
   157   000F40                     TXB0CON         equ	3904	;# 
   158   000F41                     TXB0SIDH        equ	3905	;# 
   159   000F42                     TXB0SIDL        equ	3906	;# 
   160   000F43                     TXB0EIDH        equ	3907	;# 
   161   000F44                     TXB0EIDL        equ	3908	;# 
   162   000F45                     TXB0DLC         equ	3909	;# 
   163   000F46                     TXB0D0          equ	3910	;# 
   164   000F47                     TXB0D1          equ	3911	;# 
   165   000F48                     TXB0D2          equ	3912	;# 
   166   000F49                     TXB0D3          equ	3913	;# 
   167   000F4A                     TXB0D4          equ	3914	;# 
   168   000F4B                     TXB0D5          equ	3915	;# 
   169   000F4C                     TXB0D6          equ	3916	;# 
   170   000F4D                     TXB0D7          equ	3917	;# 
   171   000F4E                     CANSTATRO2      equ	3918	;# 
   172   000F50                     RXB1CON         equ	3920	;# 
   173   000F51                     RXB1SIDH        equ	3921	;# 
   174   000F52                     RXB1SIDL        equ	3922	;# 
   175   000F53                     RXB1EIDH        equ	3923	;# 
   176   000F54                     RXB1EIDL        equ	3924	;# 
   177   000F55                     RXB1DLC         equ	3925	;# 
   178   000F56                     RXB1D0          equ	3926	;# 
   179   000F57                     RXB1D1          equ	3927	;# 
   180   000F58                     RXB1D2          equ	3928	;# 
   181   000F59                     RXB1D3          equ	3929	;# 
   182   000F5A                     RXB1D4          equ	3930	;# 
   183   000F5B                     RXB1D5          equ	3931	;# 
   184   000F5C                     RXB1D6          equ	3932	;# 
   185   000F5D                     RXB1D7          equ	3933	;# 
   186   000F5E                     CANSTATRO1      equ	3934	;# 
   187   000F60                     RXB0CON         equ	3936	;# 
   188   000F61                     RXB0SIDH        equ	3937	;# 
   189   000F62                     RXB0SIDL        equ	3938	;# 
   190   000F63                     RXB0EIDH        equ	3939	;# 
   191   000F64                     RXB0EIDL        equ	3940	;# 
   192   000F65                     RXB0DLC         equ	3941	;# 
   193   000F66                     RXB0D0          equ	3942	;# 
   194   000F67                     RXB0D1          equ	3943	;# 
   195   000F68                     RXB0D2          equ	3944	;# 
   196   000F69                     RXB0D3          equ	3945	;# 
   197   000F6A                     RXB0D4          equ	3946	;# 
   198   000F6B                     RXB0D5          equ	3947	;# 
   199   000F6C                     RXB0D6          equ	3948	;# 
   200   000F6D                     RXB0D7          equ	3949	;# 
   201   000F6E                     CANSTAT         equ	3950	;# 
   202   000F6F                     CANCON          equ	3951	;# 
   203   000F70                     BRGCON1         equ	3952	;# 
   204   000F71                     BRGCON2         equ	3953	;# 
   205   000F72                     BRGCON3         equ	3954	;# 
   206   000F73                     CIOCON          equ	3955	;# 
   207   000F74                     COMSTAT         equ	3956	;# 
   208   000F75                     RXERRCNT        equ	3957	;# 
   209   000F76                     TXERRCNT        equ	3958	;# 
   210   000F80                     PORTA           equ	3968	;# 
   211   000F81                     PORTB           equ	3969	;# 
   212   000F82                     PORTC           equ	3970	;# 
   213   000F83                     PORTD           equ	3971	;# 
   214   000F84                     PORTE           equ	3972	;# 
   215   000F89                     LATA            equ	3977	;# 
   216   000F8A                     LATB            equ	3978	;# 
   217   000F8B                     LATC            equ	3979	;# 
   218   000F8C                     LATD            equ	3980	;# 
   219   000F8D                     LATE            equ	3981	;# 
   220   000F92                     TRISA           equ	3986	;# 
   221   000F92                     DDRA            equ	3986	;# 
   222   000F93                     TRISB           equ	3987	;# 
   223   000F93                     DDRB            equ	3987	;# 
   224   000F94                     TRISC           equ	3988	;# 
   225   000F94                     DDRC            equ	3988	;# 
   226   000F95                     TRISD           equ	3989	;# 
   227   000F95                     DDRD            equ	3989	;# 
   228   000F96                     TRISE           equ	3990	;# 
   229   000F96                     DDRE            equ	3990	;# 
   230   000F9D                     PIE1            equ	3997	;# 
   231   000F9E                     PIR1            equ	3998	;# 
   232   000F9F                     IPR1            equ	3999	;# 
   233   000FA0                     PIE2            equ	4000	;# 
   234   000FA1                     PIR2            equ	4001	;# 
   235   000FA2                     IPR2            equ	4002	;# 
   236   000FA3                     PIE3            equ	4003	;# 
   237   000FA4                     PIR3            equ	4004	;# 
   238   000FA5                     IPR3            equ	4005	;# 
   239   000FA6                     EECON1          equ	4006	;# 
   240   000FA7                     EECON2          equ	4007	;# 
   241   000FA8                     EEDATA          equ	4008	;# 
   242   000FA9                     EEADR           equ	4009	;# 
   243   000FAB                     RCSTA           equ	4011	;# 
   244   000FAB                     RCSTA1          equ	4011	;# 
   245   000FAC                     TXSTA           equ	4012	;# 
   246   000FAC                     TXSTA1          equ	4012	;# 
   247   000FAD                     TXREG           equ	4013	;# 
   248   000FAD                     TXREG1          equ	4013	;# 
   249   000FAE                     RCREG           equ	4014	;# 
   250   000FAE                     RCREG1          equ	4014	;# 
   251   000FAF                     SPBRG           equ	4015	;# 
   252   000FAF                     SPBRG1          equ	4015	;# 
   253   000FB1                     T3CON           equ	4017	;# 
   254   000FB2                     TMR3            equ	4018	;# 
   255   000FB2                     TMR3L           equ	4018	;# 
   256   000FB3                     TMR3H           equ	4019	;# 
   257   000FB4                     CMCON           equ	4020	;# 
   258   000FB5                     CVRCON          equ	4021	;# 
   259   000FB6                     ECCPAS          equ	4022	;# 
   260   000FB7                     ECCP1DEL        equ	4023	;# 
   261   000FBA                     ECCP1CON        equ	4026	;# 
   262   000FBB                     ECCPR1          equ	4027	;# 
   263   000FBB                     ECCPR1L         equ	4027	;# 
   264   000FBC                     ECCPR1H         equ	4028	;# 
   265   000FBD                     CCP1CON         equ	4029	;# 
   266   000FBE                     CCPR1           equ	4030	;# 
   267   000FBE                     CCPR1L          equ	4030	;# 
   268   000FBF                     CCPR1H          equ	4031	;# 
   269   000FC1                     ADCON1          equ	4033	;# 
   270   000FC2                     ADCON0          equ	4034	;# 
   271   000FC3                     ADRES           equ	4035	;# 
   272   000FC3                     ADRESL          equ	4035	;# 
   273   000FC4                     ADRESH          equ	4036	;# 
   274   000FC5                     SSPCON2         equ	4037	;# 
   275   000FC6                     SSPCON1         equ	4038	;# 
   276   000FC7                     SSPSTAT         equ	4039	;# 
   277   000FC8                     SSPADD          equ	4040	;# 
   278   000FC9                     SSPBUF          equ	4041	;# 
   279   000FCA                     T2CON           equ	4042	;# 
   280   000FCB                     PR2             equ	4043	;# 
   281   000FCB                     MEMCON          equ	4043	;# 
   282   000FCC                     TMR2            equ	4044	;# 
   283   000FCD                     T1CON           equ	4045	;# 
   284   000FCE                     TMR1            equ	4046	;# 
   285   000FCE                     TMR1L           equ	4046	;# 
   286   000FCF                     TMR1H           equ	4047	;# 
   287   000FD0                     RCON            equ	4048	;# 
   288   000FD1                     WDTCON          equ	4049	;# 
   289   000FD2                     LVDCON          equ	4050	;# 
   290   000FD3                     OSCCON          equ	4051	;# 
   291   000FD5                     T0CON           equ	4053	;# 
   292   000FD6                     TMR0            equ	4054	;# 
   293   000FD6                     TMR0L           equ	4054	;# 
   294   000FD7                     TMR0H           equ	4055	;# 
   295   000FD8                     STATUS          equ	4056	;# 
   296   000FD9                     FSR2            equ	4057	;# 
   297   000FD9                     FSR2L           equ	4057	;# 
   298   000FDA                     FSR2H           equ	4058	;# 
   299   000FDB                     PLUSW2          equ	4059	;# 
   300   000FDC                     PREINC2         equ	4060	;# 
   301   000FDD                     POSTDEC2        equ	4061	;# 
   302   000FDE                     POSTINC2        equ	4062	;# 
   303   000FDF                     INDF2           equ	4063	;# 
   304   000FE0                     BSR             equ	4064	;# 
   305   000FE1                     FSR1            equ	4065	;# 
   306   000FE1                     FSR1L           equ	4065	;# 
   307   000FE2                     FSR1H           equ	4066	;# 
   308   000FE3                     PLUSW1          equ	4067	;# 
   309   000FE4                     PREINC1         equ	4068	;# 
   310   000FE5                     POSTDEC1        equ	4069	;# 
   311   000FE6                     POSTINC1        equ	4070	;# 
   312   000FE7                     INDF1           equ	4071	;# 
   313   000FE8                     WREG            equ	4072	;# 
   314   000FE9                     FSR0            equ	4073	;# 
   315   000FE9                     FSR0L           equ	4073	;# 
   316   000FEA                     FSR0H           equ	4074	;# 
   317   000FEB                     PLUSW0          equ	4075	;# 
   318   000FEC                     PREINC0         equ	4076	;# 
   319   000FED                     POSTDEC0        equ	4077	;# 
   320   000FEE                     POSTINC0        equ	4078	;# 
   321   000FEF                     INDF0           equ	4079	;# 
   322   000FF0                     INTCON3         equ	4080	;# 
   323   000FF1                     INTCON2         equ	4081	;# 
   324   000FF2                     INTCON          equ	4082	;# 
   325   000FF2                     INTCON1         equ	4082	;# 
   326   000FF3                     PROD            equ	4083	;# 
   327   000FF3                     PRODL           equ	4083	;# 
   328   000FF4                     PRODH           equ	4084	;# 
   329   000FF5                     TABLAT          equ	4085	;# 
   330   000FF6                     TBLPTR          equ	4086	;# 
   331   000FF6                     TBLPTRL         equ	4086	;# 
   332   000FF7                     TBLPTRH         equ	4087	;# 
   333   000FF8                     TBLPTRU         equ	4088	;# 
   334   000FF9                     PCLAT           equ	4089	;# 
   335   000FF9                     PC              equ	4089	;# 
   336   000FF9                     PCL             equ	4089	;# 
   337   000FFA                     PCLATH          equ	4090	;# 
   338   000FFB                     PCLATU          equ	4091	;# 
   339   000FFC                     STKPTR          equ	4092	;# 
   340   000FFD                     TOS             equ	4093	;# 
   341   000FFD                     TOSL            equ	4093	;# 
   342   000FFE                     TOSH            equ	4094	;# 
   343   000FFF                     TOSU            equ	4095	;# 
   344                           
   345                           	psect	idataCOMRAM
   346   0007CC                     __pidataCOMRAM:
   347                           	callstack 0
   348                           
   349                           ;initializer for main@F5595
   350   0007CC  4C                 	db	76
   351   0007CD  43                 	db	67
   352   0007CE  44                 	db	68
   353   0007CF  20                 	db	32
   354   0007D0  50                 	db	80
   355   0007D1  72                 	db	114
   356   0007D2  61                 	db	97
   357   0007D3  63                 	db	99
   358   0007D4  74                 	db	116
   359   0007D5  69                 	db	105
   360   0007D6  63                 	db	99
   361   0007D7  61                 	db	97
   362   0007D8  6C                 	db	108
   363   0007D9  00                 	db	0
   364                           
   365                           ;initializer for main@F5597
   366   0007DA  53                 	db	83
   367   0007DB  45                 	db	69
   368   0007DC  20                 	db	32
   369   0007DD  49                 	db	73
   370   0007DE  54                 	db	84
   371   0007DF  00                 	db	0
   372   000F84                     _PORTEbits      set	3972
   373   000F83                     _PORTD          set	3971
   374   000F96                     _TRISE          set	3990
   375   000F95                     _TRISD          set	3989
   376   000FC1                     _ADCON1         set	4033
   377                           
   378                           ; #config settings
   379                           
   380                           	psect	cinit
   381   000766                     __pcinit:
   382                           	callstack 0
   383   000766                     start_initialization:
   384                           	callstack 0
   385   000766                     __initialization:
   386                           	callstack 0
   387                           
   388                           ; Initialize objects allocated to COMRAM (20 bytes)
   389                           ; load TBLPTR registers with __pidataCOMRAM
   390   000766  0ECC               	movlw	low __pidataCOMRAM
   391   000768  6EF6               	movwf	tblptrl,c
   392   00076A  0E07               	movlw	high __pidataCOMRAM
   393   00076C  6EF7               	movwf	tblptrh,c
   394   00076E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   395   000770  6EF8               	movwf	tblptru,c
   396   000772  EE00  F01F         	lfsr	0,__pdataCOMRAM
   397   000776  EE10 F014          	lfsr	1,20
   398   00077A                     copy_data0:
   399   00077A  0009               	tblrd		*+
   400   00077C  CFF5 FFEE          	movff	tablat,postinc0
   401   000780  50E5               	movf	postdec1,w,c
   402   000782  50E1               	movf	fsr1l,w,c
   403   000784  E1FA               	bnz	copy_data0
   404   000786                     end_of_initialization:
   405                           	callstack 0
   406   000786                     __end_of__initialization:
   407                           	callstack 0
   408   000786  0100               	movlb	0
   409   000788  EF01  F003         	goto	_main	;jump to C main() function
   410                           
   411                           	psect	dataCOMRAM
   412   00001F                     __pdataCOMRAM:
   413                           	callstack 0
   414   00001F                     main@F5595:
   415                           	callstack 0
   416   00001F                     	ds	14
   417   00002D                     main@F5597:
   418                           	callstack 0
   419   00002D                     	ds	6
   420                           
   421                           	psect	cstackCOMRAM
   422   000001                     __pcstackCOMRAM:
   423                           	callstack 0
   424   000001                     msdelay@time:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x0
   428   000001                     	ds	2
   429   000003                     msdelay@i:
   430                           	callstack 0
   431   000003                     
   432                           ; 1 bytes @ 0x2
   433   000003                     	ds	2
   434   000005                     msdelay@j:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x4
   438   000005                     	ds	2
   439   000007                     LCD_command@cmd:
   440                           	callstack 0
   441   000007                     LCD_data@data:
   442                           	callstack 0
   443   000007                     
   444                           ; 1 bytes @ 0x6
   445   000007                     	ds	1
   446   000008                     LCD_write_string@str:
   447                           	callstack 0
   448   000008                     
   449                           ; 1 bytes @ 0x7
   450   000008                     	ds	1
   451   000009                     LCD_write_string@i:
   452                           	callstack 0
   453   000009                     
   454                           ; 1 bytes @ 0x8
   455   000009                     	ds	2
   456   00000B                     main@var1:
   457                           	callstack 0
   458   00000B                     
   459                           ; 1 bytes @ 0xA
   460   00000B                     	ds	14
   461   000019                     main@var2:
   462                           	callstack 0
   463                           
   464                           ; 6 bytes @ 0x18
   465   000019                     	ds	6
   466                           
   467 ;;
   468 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   469 ;;
   470 ;; *************** function _main *****************
   471 ;; Defined at:
   472 ;;		line 18 in file "main.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;		None
   475 ;; Auto vars:     Size  Location     Type
   476 ;;  var1           14   10[COMRAM] unsigned char [14]
   477 ;;  var2            6   24[COMRAM] unsigned char [6]
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   487 ;;      Params:         0       0       0       0       0       0       0
   488 ;;      Locals:        20       0       0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0       0       0
   490 ;;      Totals:        20       0       0       0       0       0       0
   491 ;;Total ram usage:       20 bytes
   492 ;; Hardware stack levels required when called: 3
   493 ;; This function calls:
   494 ;;		_LCD_command
   495 ;;		_LCD_write_string
   496 ;;		_init_LCD
   497 ;;		_msdelay
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	text0
   504   000602                     __ptext0:
   505                           	callstack 0
   506   000602                     _main:
   507                           	callstack 28
   508   000602  FFFF               	dw	65535	; assembler added errata NOP
   509                           
   510                           ;main.c: 19: 
   511   000604  EE20  F01F         	lfsr	2,main@F5595
   512   000608  EE10  F00B         	lfsr	1,main@var1
   513   00060C  0E0D               	movlw	13
   514   00060E                     u91:
   515   00060E  CFDB FFE3          	movff	plusw2,plusw1
   516   000612  06E8               	decf	wreg,f,c
   517   000614  E2FC               	bc	u91
   518                           
   519                           ;main.c: 20:     init_LCD();
   520   000616  EE20  F02D         	lfsr	2,main@F5597
   521   00061A  EE10  F019         	lfsr	1,main@var2
   522   00061E  0E05               	movlw	5
   523   000620                     u101:
   524   000620  CFDB FFE3          	movff	plusw2,plusw1
   525   000624  06E8               	decf	wreg,f,c
   526   000626  E2FC               	bc	u101
   527   000628                     
   528                           ;main.c: 22: 
   529   000628  0E0F               	movlw	15
   530   00062A  6EC1               	movwf	193,c	;volatile
   531   00062C                     
   532                           ;main.c: 23:     LCD_write_string(var1);
   533   00062C  6A95               	clrf	149,c	;volatile
   534   00062E                     
   535                           ;main.c: 24:     msdelay(150);
   536   00062E  6A96               	clrf	150,c	;volatile
   537   000630                     
   538                           ;main.c: 26:     LCD_command(0xC0);
   539   000630  EC8C  F003         	call	_init_LCD	;wreg free
   540   000634                     
   541                           ;main.c: 27:     LCD_write_string(var2);
   542   000634  0E00               	movlw	0
   543   000636  6E02               	movwf	(msdelay@time+1)^0,c
   544   000638  0E32               	movlw	50
   545   00063A  6E01               	movwf	msdelay@time^0,c
   546   00063C  EC36  F003         	call	_msdelay	;wreg free
   547   000640                     
   548                           ;main.c: 29:     while (1);
   549   000640  0E0B               	movlw	low main@var1
   550   000642  6E08               	movwf	LCD_write_string@str^0,c
   551   000644  EC64  F003         	call	_LCD_write_string	;wreg free
   552   000648                     
   553                           ;main.c: 30: }
   554   000648  0E00               	movlw	0
   555   00064A  6E02               	movwf	(msdelay@time+1)^0,c
   556   00064C  0E96               	movlw	150
   557   00064E  6E01               	movwf	msdelay@time^0,c
   558   000650  EC36  F003         	call	_msdelay	;wreg free
   559   000654                     
   560                           ;main.c: 32: void msdelay(unsigned int time) {
   561   000654  0EC0               	movlw	192
   562   000656  ECC6  F003         	call	_LCD_command
   563   00065A                     
   564                           ;main.c: 33:     unsigned int i, j;
   565   00065A  0E19               	movlw	low main@var2
   566   00065C  6E08               	movwf	LCD_write_string@str^0,c
   567   00065E  EC64  F003         	call	_LCD_write_string	;wreg free
   568   000662                     l27:
   569   000662  FFFF               	dw	65535	; assembler added errata NOP
   570   000664  EF31  F003         	goto	l27
   571   000668  EFFE  F01F         	goto	start
   572   00066C                     __end_of_main:
   573                           	callstack 0
   574                           
   575 ;; *************** function _init_LCD *****************
   576 ;; Defined at:
   577 ;;		line 45 in file "main.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   591 ;;      Params:         0       0       0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0
   594 ;;      Totals:         0       0       0       0       0       0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; Hardware stack levels required when called: 2
   598 ;; This function calls:
   599 ;;		_LCD_command
   600 ;;		_msdelay
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text1
   607   000718                     __ptext1:
   608                           	callstack 0
   609   000718                     _init_LCD:
   610                           	callstack 0
   611   000718  FFFF               	dw	65535	; assembler added errata NOP
   612   00071A                     
   613                           ;main.c: 46:     LCD_command(0x80);
   614   00071A  0E38               	movlw	56
   615   00071C  ECC6  F003         	call	_LCD_command
   616                           
   617                           ;main.c: 47:     msdelay(15);
   618   000720  0E00               	movlw	0
   619   000722  6E02               	movwf	(msdelay@time+1)^0,c
   620   000724  0E0F               	movlw	15
   621   000726  6E01               	movwf	msdelay@time^0,c
   622   000728  EC36  F003         	call	_msdelay	;wreg free
   623                           
   624                           ;main.c: 48: }
   625   00072C  0E01               	movlw	1
   626   00072E  ECC6  F003         	call	_LCD_command
   627                           
   628                           ;main.c: 49: 
   629   000732  0E00               	movlw	0
   630   000734  6E02               	movwf	(msdelay@time+1)^0,c
   631   000736  0E0F               	movlw	15
   632   000738  6E01               	movwf	msdelay@time^0,c
   633   00073A  EC36  F003         	call	_msdelay	;wreg free
   634                           
   635                           ;main.c: 50: void LCD_command(unsigned char cmd) {
   636   00073E  0E0C               	movlw	12
   637   000740  ECC6  F003         	call	_LCD_command
   638                           
   639                           ;main.c: 51:     PORTD = cmd;
   640   000744  0E00               	movlw	0
   641   000746  6E02               	movwf	(msdelay@time+1)^0,c
   642   000748  0E0F               	movlw	15
   643   00074A  6E01               	movwf	msdelay@time^0,c
   644   00074C  EC36  F003         	call	_msdelay	;wreg free
   645                           
   646                           ;main.c: 52:     PORTEbits.RE0 = 0;
   647   000750  0E80               	movlw	128
   648   000752  ECC6  F003         	call	_LCD_command
   649                           
   650                           ;main.c: 53:     PORTEbits.RE1 = 0;
   651   000756  0E00               	movlw	0
   652   000758  6E02               	movwf	(msdelay@time+1)^0,c
   653   00075A  0E0F               	movlw	15
   654   00075C  6E01               	movwf	msdelay@time^0,c
   655   00075E  EC36  F003         	call	_msdelay	;wreg free
   656   000762  0012               	return		;funcret
   657   000764  FFFF               	dw	65535	; errata NOP
   658   000766                     __end_of_init_LCD:
   659                           	callstack 0
   660                           
   661 ;; *************** function _LCD_command *****************
   662 ;; Defined at:
   663 ;;		line 56 in file "main.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;  cmd             1    wreg     unsigned char 
   666 ;; Auto vars:     Size  Location     Type
   667 ;;  cmd             1    6[COMRAM] unsigned char 
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      void 
   670 ;; Registers used:
   671 ;;		wreg, status,2, status,0, cstack
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   677 ;;      Params:         0       0       0       0       0       0       0
   678 ;;      Locals:         1       0       0       0       0       0       0
   679 ;;      Temps:          0       0       0       0       0       0       0
   680 ;;      Totals:         1       0       0       0       0       0       0
   681 ;;Total ram usage:        1 bytes
   682 ;; Hardware stack levels used: 1
   683 ;; Hardware stack levels required when called: 1
   684 ;; This function calls:
   685 ;;		_msdelay
   686 ;; This function is called by:
   687 ;;		_main
   688 ;;		_init_LCD
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	text2
   693   00078C                     __ptext2:
   694                           	callstack 0
   695   00078C                     _LCD_command:
   696                           	callstack 0
   697   00078C  FFFF               	dw	65535	; assembler added errata NOP
   698                           
   699                           ;incstack = 0
   700                           ;LCD_command@cmd stored from wreg
   701   00078E  6E07               	movwf	LCD_command@cmd^0,c
   702   000790                     
   703                           ;main.c: 57: }
   704   000790  C007  FF83         	movff	LCD_command@cmd,3971	;volatile
   705   000794                     
   706                           ;main.c: 58: 
   707   000794  9084               	bcf	132,0,c	;volatile
   708   000796                     
   709                           ;main.c: 59: void LCD_data(unsigned char data) {
   710   000796  9284               	bcf	132,1,c	;volatile
   711   000798                     
   712                           ;main.c: 60:     PORTD = data;
   713   000798  8484               	bsf	132,2,c	;volatile
   714   00079A                     
   715                           ;main.c: 61:     PORTEbits.RE0 = 1;
   716   00079A  0E00               	movlw	0
   717   00079C  6E02               	movwf	(msdelay@time+1)^0,c
   718   00079E  0E0F               	movlw	15
   719   0007A0  6E01               	movwf	msdelay@time^0,c
   720   0007A2  EC36  F003         	call	_msdelay	;wreg free
   721   0007A6                     
   722                           ;main.c: 62:     PORTEbits.RE1 = 0;
   723   0007A6  9484               	bcf	132,2,c	;volatile
   724   0007A8  0012               	return		;funcret
   725   0007AA  FFFF               	dw	65535	; errata NOP
   726   0007AC                     __end_of_LCD_command:
   727                           	callstack 0
   728                           
   729 ;; *************** function _LCD_write_string *****************
   730 ;; Defined at:
   731 ;;		line 74 in file "main.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  str             1    7[COMRAM] PTR unsigned char 
   734 ;;		 -> main@var2(6), main@var1(14), 
   735 ;; Auto vars:     Size  Location     Type
   736 ;;  i               2    8[COMRAM] int 
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   746 ;;      Params:         1       0       0       0       0       0       0
   747 ;;      Locals:         2       0       0       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0       0       0
   749 ;;      Totals:         3       0       0       0       0       0       0
   750 ;;Total ram usage:        3 bytes
   751 ;; Hardware stack levels used: 1
   752 ;; Hardware stack levels required when called: 2
   753 ;; This function calls:
   754 ;;		_LCD_data
   755 ;;		_msdelay
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           	psect	text3
   762   0006C8                     __ptext3:
   763                           	callstack 0
   764   0006C8                     _LCD_write_string:
   765                           	callstack 0
   766   0006C8  FFFF               	dw	65535	; assembler added errata NOP
   767   0006CA                     
   768                           ;main.c: 75: }
   769   0006CA  0E00               	movlw	0
   770   0006CC  6E0A               	movwf	(LCD_write_string@i+1)^0,c
   771   0006CE  0E00               	movlw	0
   772   0006D0  6E09               	movwf	LCD_write_string@i^0,c
   773   0006D2  EF7B  F003         	goto	l851
   774   0006D6                     l845:
   775   0006D6  FFFF               	dw	65535	; assembler added errata NOP
   776   0006D8  5008               	movf	LCD_write_string@str^0,w,c
   777   0006DA  2409               	addwf	LCD_write_string@i^0,w,c
   778   0006DC  6ED9               	movwf	fsr2l,c
   779   0006DE  6ADA               	clrf	fsr2h,c
   780   0006E0  50DF               	movf	indf2,w,c
   781   0006E2  ECD6  F003         	call	_LCD_data
   782   0006E6  0E00               	movlw	0
   783   0006E8  6E02               	movwf	(msdelay@time+1)^0,c
   784   0006EA  0E0F               	movlw	15
   785   0006EC  6E01               	movwf	msdelay@time^0,c
   786   0006EE  EC36  F003         	call	_msdelay	;wreg free
   787   0006F2  4A09               	infsnz	LCD_write_string@i^0,f,c
   788   0006F4  2A0A               	incf	(LCD_write_string@i+1)^0,f,c
   789   0006F6                     l851:
   790   0006F6  FFFF               	dw	65535	; assembler added errata NOP
   791   0006F8  5008               	movf	LCD_write_string@str^0,w,c
   792   0006FA  2409               	addwf	LCD_write_string@i^0,w,c
   793   0006FC  6ED9               	movwf	fsr2l,c
   794   0006FE  6ADA               	clrf	fsr2h,c
   795   000700  50DF               	movf	indf2,w,c
   796   000702  A4D8               	btfss	status,2,c
   797   000704  EF86  F003         	goto	u81
   798   000708  EF89  F003         	goto	u80
   799   00070C                     u81:
   800   00070C  FFFF               	dw	65535	; assembler added errata NOP
   801   00070E  EF6B  F003         	goto	l845
   802   000712                     u80:
   803   000712  FFFF               	dw	65535	; assembler added errata NOP
   804   000714  0012               	return		;funcret
   805   000716  FFFF               	dw	65535	; errata NOP
   806   000718                     __end_of_LCD_write_string:
   807                           	callstack 0
   808                           
   809 ;; *************** function _LCD_data *****************
   810 ;; Defined at:
   811 ;;		line 65 in file "main.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  data            1    wreg     unsigned char 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  data            1    6[COMRAM] unsigned char 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, status,2, status,0, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   825 ;;      Params:         0       0       0       0       0       0       0
   826 ;;      Locals:         1       0       0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0
   828 ;;      Totals:         1       0       0       0       0       0       0
   829 ;;Total ram usage:        1 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; Hardware stack levels required when called: 1
   832 ;; This function calls:
   833 ;;		_msdelay
   834 ;; This function is called by:
   835 ;;		_LCD_write_string
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text4
   840   0007AC                     __ptext4:
   841                           	callstack 0
   842   0007AC                     _LCD_data:
   843                           	callstack 0
   844   0007AC  FFFF               	dw	65535	; assembler added errata NOP
   845                           
   846                           ;incstack = 0
   847                           ;LCD_data@data stored from wreg
   848   0007AE  6E07               	movwf	LCD_data@data^0,c
   849   0007B0                     
   850                           ;main.c: 66: }
   851   0007B0  C007  FF83         	movff	LCD_data@data,3971	;volatile
   852   0007B4                     
   853                           ;main.c: 67: 
   854   0007B4  8084               	bsf	132,0,c	;volatile
   855   0007B6                     
   856                           ;main.c: 68: void LCD_write_string(char *str) {
   857   0007B6  9284               	bcf	132,1,c	;volatile
   858   0007B8                     
   859                           ;main.c: 69:     int i = 0;
   860   0007B8  8484               	bsf	132,2,c	;volatile
   861   0007BA                     
   862                           ;main.c: 70:     while (str[i] != '\0') {
   863   0007BA  0E00               	movlw	0
   864   0007BC  6E02               	movwf	(msdelay@time+1)^0,c
   865   0007BE  0E0F               	movlw	15
   866   0007C0  6E01               	movwf	msdelay@time^0,c
   867   0007C2  EC36  F003         	call	_msdelay	;wreg free
   868   0007C6                     
   869                           ;main.c: 71:         LCD_data(str[i]);
   870   0007C6  9484               	bcf	132,2,c	;volatile
   871   0007C8  0012               	return		;funcret
   872   0007CA  FFFF               	dw	65535	; errata NOP
   873   0007CC                     __end_of_LCD_data:
   874                           	callstack 0
   875                           
   876 ;; *************** function _msdelay *****************
   877 ;; Defined at:
   878 ;;		line 38 in file "main.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  time            2    0[COMRAM] unsigned int 
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  j               2    4[COMRAM] unsigned int 
   883 ;;  i               2    2[COMRAM] unsigned int 
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, status,2, status,0
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   893 ;;      Params:         2       0       0       0       0       0       0
   894 ;;      Locals:         4       0       0       0       0       0       0
   895 ;;      Temps:          0       0       0       0       0       0       0
   896 ;;      Totals:         6       0       0       0       0       0       0
   897 ;;Total ram usage:        6 bytes
   898 ;; Hardware stack levels used: 1
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_main
   903 ;;		_init_LCD
   904 ;;		_LCD_command
   905 ;;		_LCD_data
   906 ;;		_LCD_write_string
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text5
   911   00066C                     __ptext5:
   912                           	callstack 0
   913   00066C                     _msdelay:
   914                           	callstack 0
   915   00066C  FFFF               	dw	65535	; assembler added errata NOP
   916   00066E                     
   917                           ;main.c: 39: void init_LCD(void) {;main.c: 40:     LCD_command(0x38);
   918   00066E  0E00               	movlw	0
   919   000670  6E04               	movwf	(msdelay@i+1)^0,c
   920   000672  0E00               	movlw	0
   921   000674  6E03               	movwf	msdelay@i^0,c
   922   000676  EF54  F003         	goto	l815
   923   00067A                     l803:
   924   00067A  FFFF               	dw	65535	; assembler added errata NOP
   925                           
   926                           ;main.c: 41:     msdelay(15);
   927   00067C  0E00               	movlw	0
   928   00067E  6E06               	movwf	(msdelay@j+1)^0,c
   929   000680  0E00               	movlw	0
   930   000682  6E05               	movwf	msdelay@j^0,c
   931   000684                     l809:
   932   000684  FFFF               	dw	65535	; assembler added errata NOP
   933   000686  4A05               	infsnz	msdelay@j^0,f,c
   934   000688  2A06               	incf	(msdelay@j+1)^0,f,c
   935   00068A  0EC6               	movlw	198
   936   00068C  5C05               	subwf	msdelay@j^0,w,c
   937   00068E  0E02               	movlw	2
   938   000690  5806               	subwfb	(msdelay@j+1)^0,w,c
   939   000692  A0D8               	btfss	status,0,c
   940   000694  EF4E  F003         	goto	u61
   941   000698  EF51  F003         	goto	u60
   942   00069C                     u61:
   943   00069C  FFFF               	dw	65535	; assembler added errata NOP
   944   00069E  EF42  F003         	goto	l809
   945   0006A2                     u60:
   946   0006A2  FFFF               	dw	65535	; assembler added errata NOP
   947   0006A4                     
   948                           ;main.c: 42:     LCD_command(0x01);
   949   0006A4  4A03               	infsnz	msdelay@i^0,f,c
   950   0006A6  2A04               	incf	(msdelay@i+1)^0,f,c
   951   0006A8                     l815:
   952   0006A8  FFFF               	dw	65535	; assembler added errata NOP
   953   0006AA  5001               	movf	msdelay@time^0,w,c
   954   0006AC  5C03               	subwf	msdelay@i^0,w,c
   955   0006AE  5002               	movf	(msdelay@time+1)^0,w,c
   956   0006B0  5804               	subwfb	(msdelay@i+1)^0,w,c
   957   0006B2  A0D8               	btfss	status,0,c
   958   0006B4  EF5E  F003         	goto	u71
   959   0006B8  EF61  F003         	goto	u70
   960   0006BC                     u71:
   961   0006BC  FFFF               	dw	65535	; assembler added errata NOP
   962   0006BE  EF3D  F003         	goto	l803
   963   0006C2                     u70:
   964   0006C2  FFFF               	dw	65535	; assembler added errata NOP
   965   0006C4  0012               	return		;funcret
   966   0006C6  FFFF               	dw	65535	; errata NOP
   967   0006C8                     __end_of_msdelay:
   968                           	callstack 0
   969                           
   970                           	psect	smallconst
   971   000600                     __psmallconst:
   972                           	callstack 0
   973   000600  00                 	db	0
   974   000601  00                 	db	0	; dummy byte at the end
   975   000600                     __smallconst    set	__psmallconst
   976   000600                     __mediumconst   set	__psmallconst
   977   000000                     __activetblptr  equ	0
   978                           
   979                           	psect	rparam
   980   000001                     ___rparam_used  equ	1
   981   000000                     ___param_bank   equ	0
   982   000000                     __Lparam        equ	__Lrparam
   983   000000                     __Hparam        equ	__Hrparam
   984                           
   985                           	psect	config
   986                           
   987                           ;Config register CONFIG2L @ 0x300002
   988                           ;	unspecified, using default values
   989                           ;	Power-up Timer Enable bit
   990                           ;	PWRT = 0x1, unprogrammed default
   991                           ;	Brown-out Reset Enable bit
   992                           ;	BOR = 0x1, unprogrammed default
   993                           ;	Brown-out Reset Voltage bits
   994                           ;	BORV = 0x3, unprogrammed default
   995   300002                     	org	3145730
   996   300002  0F                 	db	15
   997                           
   998                           ;Config register CONFIG2H @ 0x300003
   999                           ;	Watchdog Timer Enable bit
  1000                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1001                           ;	Watchdog Timer Postscale Select bits
  1002                           ;	WDTPS = 0x7, unprogrammed default
  1003   300003                     	org	3145731
  1004   300003  0E                 	db	14
  1005                           
  1006                           ;Config register CONFIG4L @ 0x300006
  1007                           ;	Stack Full/Underflow Reset Enable bit
  1008                           ;	STVR = 0x1, unprogrammed default
  1009                           ;	Low-Voltage ICSP Enable bit
  1010                           ;	LVP = OFF, Low-Voltage ICSP disabled
  1011                           ;	Background Debugger Enable bit
  1012                           ;	DEBUG = 0x1, unprogrammed default
  1013   300006                     	org	3145734
  1014   300006  81                 	db	129
  1015                           
  1016                           ; Padding undefined space
  1017   300007                     	org	3145735
  1018   300007  FF                 	db	255
  1019                           tosu	equ	0xFFF
  1020                           tosh	equ	0xFFE
  1021                           tosl	equ	0xFFD
  1022                           stkptr	equ	0xFFC
  1023                           pclatu	equ	0xFFB
  1024                           pclath	equ	0xFFA
  1025                           pcl	equ	0xFF9
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           prodh	equ	0xFF4
  1031                           prodl	equ	0xFF3
  1032                           indf0	equ	0xFEF
  1033                           postinc0	equ	0xFEE
  1034                           postdec0	equ	0xFED
  1035                           preinc0	equ	0xFEC
  1036                           plusw0	equ	0xFEB
  1037                           fsr0h	equ	0xFEA
  1038                           fsr0l	equ	0xFE9
  1039                           wreg	equ	0xFE8
  1040                           indf1	equ	0xFE7
  1041                           postinc1	equ	0xFE6
  1042                           postdec1	equ	0xFE5
  1043                           preinc1	equ	0xFE4
  1044                           plusw1	equ	0xFE3
  1045                           fsr1h	equ	0xFE2
  1046                           fsr1l	equ	0xFE1
  1047                           bsr	equ	0xFE0
  1048                           indf2	equ	0xFDF
  1049                           postinc2	equ	0xFDE
  1050                           postdec2	equ	0xFDD
  1051                           preinc2	equ	0xFDC
  1052                           plusw2	equ	0xFDB
  1053                           fsr2h	equ	0xFDA
  1054                           fsr2l	equ	0xFD9
  1055                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      50
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    LCD_write_string@str	PTR unsigned char  size(1) Largest target is 14
		 -> main@var1(COMRAM[14]), main@var2(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_LCD_write_string
    _init_LCD->_LCD_command
    _LCD_command->_msdelay
    _LCD_write_string->_LCD_data
    _LCD_data->_msdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0     835
                                             10 COMRAM    20    20      0
                        _LCD_command
                   _LCD_write_string
                           _init_LCD
                            _msdelay
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             0     0      0     231
                        _LCD_command
                            _msdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_command                                          1     1      0     130
                                              6 COMRAM     1     1      0
                            _msdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_write_string                                     3     2      1     323
                                              7 COMRAM     3     2      1
                           _LCD_data
                            _msdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_data                                             1     1      0     130
                                              6 COMRAM     1     1      0
                            _msdelay
 ---------------------------------------------------------------------------------
 (1) _msdelay                                              6     4      2     101
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_command
     _msdelay
   _LCD_write_string
     _LCD_data
       _msdelay
     _msdelay
   _init_LCD
     _LCD_command
     _msdelay
   _msdelay

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRl         131      0       0      0.0%
BITBIGSFRh         123      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     30      50     52.6%
STACK                0      0       0      0.0%
DATA                 0      0      50      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu May 08 15:51:38 2025

                                                      l41 0762  
                                                      l27 0662  
                                                      l44 07A8  
                                                      l28 0664  
                                                      l53 0714  
                                                      l38 06C4  
                                                      l47 07C8  
                                                      u60 06A2  
                                                      u61 069C  
                                                      u70 06C2  
                                                      u71 06BC  
                                                      u80 0712  
                                                      u81 070C  
                                                      u91 060E  
                                                     l801 066E  
                                                     l811 068A  
                                                     l803 067A  
                                                     l813 06A4  
                                                     l821 0796  
                                                     l815 06A8  
                                                     l831 07B4  
                                                     l823 0798  
                                                     l809 0684  
                                                     l833 07B6  
                                                     l825 079A  
                                                     l817 0790  
                                                     l841 071A  
                                                     l835 07B8  
                                                     l851 06F6  
                                                     l843 06CA  
                                                     l827 07A6  
                                                     l819 0794  
                                                     l837 07BA  
                                                     l829 07B0  
                                                     l845 06D6  
                                                     l861 0630  
                                                     l853 0602  
                                                     l839 07C6  
                                                     l847 06E6  
                                                     l871 065A  
                                                     l863 0634  
                                                     l855 0628  
                                                     l849 06F2  
                                                     l865 0640  
                                                     l857 062C  
                                                     l867 0648  
                                                     l859 062E  
                                                     l869 0654  
                                                     u101 0620  
                                                     wreg 0FE8  
                                            ?_LCD_command 0001  
                                                    _main 0602  
                                                    fsr2h 0FDA  
                                                    indf2 0FDF  
                                                    fsr1l 0FE1  
                                                    fsr2l 0FD9  
                                                    start 3FFC  
                                            ___param_bank 0000  
                                        __end_of_LCD_data 07CC  
                                                   ?_main 0001  
                                                   _PORTD 0F83  
                                                   _TRISD 0F95  
                                                   _TRISE 0F96  
                                         __end_of_msdelay 06C8  
                                                   tablat 0FF5  
                                                   plusw1 0FE3  
                                                   plusw2 0FDB  
                                                   status 0FD8  
                                         __initialization 0766  
                                            __end_of_main 066C  
                                       ?_LCD_write_string 0008  
                                                  ??_main 000B  
                                           __activetblptr 0000  
                                      ??_LCD_write_string 0009  
                                                  _ADCON1 0FC1  
                                        __end_of_init_LCD 0766  
                                            LCD_data@data 0007  
                                                  isa$std 0001  
                                            __pdataCOMRAM 001F  
                                               ??_msdelay 0003  
                                            __mediumconst 0600  
                                                  tblptrh 0FF7  
                                                  tblptrl 0FF6  
                                                  tblptru 0FF8  
                                              __accesstop 0060  
                                 __end_of__initialization 0786  
                                               ?_LCD_data 0001  
                                           ___rparam_used 0001  
                                          __pcstackCOMRAM 0001  
                                              ??_LCD_data 0007  
                                             msdelay@time 0001  
                                               ?_init_LCD 0001  
                                                 __Hparam 0000  
                                                 __Lparam 0000  
                                            __psmallconst 0600  
                                                 __pcinit 0766  
                                                 __ramtop 0600  
                                                 __ptext0 0602  
                                                 __ptext1 0718  
                                                 __ptext2 078C  
                                                 __ptext3 06C8  
                                                 __ptext4 07AC  
                                                 __ptext5 066C  
                                                 _msdelay 066C  
                                    end_of_initialization 0786  
                                              ??_init_LCD 0008  
                                                 postdec1 0FE5  
                                                 postinc0 0FEE  
                                               _PORTEbits 0F84  
                                           __pidataCOMRAM 07CC  
                                     start_initialization 0766  
                                           ??_LCD_command 0007  
                                     LCD_write_string@str 0008  
                                        _LCD_write_string 06C8  
                                     __end_of_LCD_command 07AC  
                                             __smallconst 0600  
                                                ?_msdelay 0001  
                                                _LCD_data 07AC  
                                               main@F5595 001F  
                                               main@F5597 002D  
                                               copy_data0 077A  
                                             _LCD_command 078C  
                                                __Hrparam 0000  
                                                __Lrparam 0000  
                                                _init_LCD 0718  
                                                isa$xinst 0000  
                                                main@var1 000B  
                                                main@var2 0019  
                                __end_of_LCD_write_string 0718  
                                       LCD_write_string@i 0009  
                                                msdelay@i 0003  
                                                msdelay@j 0005  
                                          LCD_command@cmd 0007  
