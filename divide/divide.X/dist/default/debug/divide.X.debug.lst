

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu May 08 15:01:55 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=1
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12   000000                     
    13                           ; Generated 17/01/2025 GMT
    14                           ; 
    15                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F452 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47   000FE0                     bsr             equ	4064
    48   000FE9                     fsr0            equ	4073
    49   000FEA                     fsr0h           equ	4074
    50   000FE9                     fsr0l           equ	4073
    51   000FE1                     fsr1            equ	4065
    52   000FE2                     fsr1h           equ	4066
    53   000FE1                     fsr1l           equ	4065
    54   000FD9                     fsr2            equ	4057
    55   000FDA                     fsr2h           equ	4058
    56   000FD9                     fsr2l           equ	4057
    57   000FEF                     indf0           equ	4079
    58   000FE7                     indf1           equ	4071
    59   000FDF                     indf2           equ	4063
    60   000FF2                     intcon          equ	4082
    61   000000                     nvmcon          equ	0
    62   000FF9                     pcl             equ	4089
    63   000FFA                     pclath          equ	4090
    64   000FFB                     pclatu          equ	4091
    65   000FEB                     plusw0          equ	4075
    66   000FE3                     plusw1          equ	4067
    67   000FDB                     plusw2          equ	4059
    68   000FED                     postdec0        equ	4077
    69   000FE5                     postdec1        equ	4069
    70   000FDD                     postdec2        equ	4061
    71   000FEE                     postinc0        equ	4078
    72   000FE6                     postinc1        equ	4070
    73   000FDE                     postinc2        equ	4062
    74   000FEC                     preinc0         equ	4076
    75   000FE4                     preinc1         equ	4068
    76   000FDC                     preinc2         equ	4060
    77   000FF3                     prod            equ	4083
    78   000FF4                     prodh           equ	4084
    79   000FF3                     prodl           equ	4083
    80   000FD8                     status          equ	4056
    81   000FF5                     tablat          equ	4085
    82   000FF6                     tblptr          equ	4086
    83   000FF7                     tblptrh         equ	4087
    84   000FF6                     tblptrl         equ	4086
    85   000FF8                     tblptru         equ	4088
    86   000FFD                     tosl            equ	4093
    87   000FE8                     wreg            equ	4072
    88   000F80                     PORTA           equ	3968	;# 
    89   000F81                     PORTB           equ	3969	;# 
    90   000F82                     PORTC           equ	3970	;# 
    91   000F83                     PORTD           equ	3971	;# 
    92   000F84                     PORTE           equ	3972	;# 
    93   000F89                     LATA            equ	3977	;# 
    94   000F8A                     LATB            equ	3978	;# 
    95   000F8B                     LATC            equ	3979	;# 
    96   000F8C                     LATD            equ	3980	;# 
    97   000F8D                     LATE            equ	3981	;# 
    98   000F92                     TRISA           equ	3986	;# 
    99   000F92                     DDRA            equ	3986	;# 
   100   000F93                     TRISB           equ	3987	;# 
   101   000F93                     DDRB            equ	3987	;# 
   102   000F94                     TRISC           equ	3988	;# 
   103   000F94                     DDRC            equ	3988	;# 
   104   000F95                     TRISD           equ	3989	;# 
   105   000F95                     DDRD            equ	3989	;# 
   106   000F96                     TRISE           equ	3990	;# 
   107   000F96                     DDRE            equ	3990	;# 
   108   000F9D                     PIE1            equ	3997	;# 
   109   000F9E                     PIR1            equ	3998	;# 
   110   000F9F                     IPR1            equ	3999	;# 
   111   000FA0                     PIE2            equ	4000	;# 
   112   000FA1                     PIR2            equ	4001	;# 
   113   000FA2                     IPR2            equ	4002	;# 
   114   000FA6                     EECON1          equ	4006	;# 
   115   000FA7                     EECON2          equ	4007	;# 
   116   000FA8                     EEDATA          equ	4008	;# 
   117   000FA9                     EEADR           equ	4009	;# 
   118   000FAB                     RCSTA           equ	4011	;# 
   119   000FAB                     RCSTA1          equ	4011	;# 
   120   000FAC                     TXSTA           equ	4012	;# 
   121   000FAC                     TXSTA1          equ	4012	;# 
   122   000FAD                     TXREG           equ	4013	;# 
   123   000FAD                     TXREG1          equ	4013	;# 
   124   000FAE                     RCREG           equ	4014	;# 
   125   000FAE                     RCREG1          equ	4014	;# 
   126   000FAF                     SPBRG           equ	4015	;# 
   127   000FAF                     SPBRG1          equ	4015	;# 
   128   000FB1                     T3CON           equ	4017	;# 
   129   000FB2                     TMR3            equ	4018	;# 
   130   000FB2                     TMR3L           equ	4018	;# 
   131   000FB3                     TMR3H           equ	4019	;# 
   132   000FBA                     CCP2CON         equ	4026	;# 
   133   000FBB                     CCPR2           equ	4027	;# 
   134   000FBB                     CCPR2L          equ	4027	;# 
   135   000FBC                     CCPR2H          equ	4028	;# 
   136   000FBD                     CCP1CON         equ	4029	;# 
   137   000FBE                     CCPR1           equ	4030	;# 
   138   000FBE                     CCPR1L          equ	4030	;# 
   139   000FBF                     CCPR1H          equ	4031	;# 
   140   000FC1                     ADCON1          equ	4033	;# 
   141   000FC2                     ADCON0          equ	4034	;# 
   142   000FC3                     ADRES           equ	4035	;# 
   143   000FC3                     ADRESL          equ	4035	;# 
   144   000FC4                     ADRESH          equ	4036	;# 
   145   000FC5                     SSPCON2         equ	4037	;# 
   146   000FC6                     SSPCON1         equ	4038	;# 
   147   000FC7                     SSPSTAT         equ	4039	;# 
   148   000FC8                     SSPADD          equ	4040	;# 
   149   000FC9                     SSPBUF          equ	4041	;# 
   150   000FCA                     T2CON           equ	4042	;# 
   151   000FCB                     PR2             equ	4043	;# 
   152   000FCB                     MEMCON          equ	4043	;# 
   153   000FCC                     TMR2            equ	4044	;# 
   154   000FCD                     T1CON           equ	4045	;# 
   155   000FCE                     TMR1            equ	4046	;# 
   156   000FCE                     TMR1L           equ	4046	;# 
   157   000FCF                     TMR1H           equ	4047	;# 
   158   000FD0                     RCON            equ	4048	;# 
   159   000FD1                     WDTCON          equ	4049	;# 
   160   000FD2                     LVDCON          equ	4050	;# 
   161   000FD3                     OSCCON          equ	4051	;# 
   162   000FD5                     T0CON           equ	4053	;# 
   163   000FD6                     TMR0            equ	4054	;# 
   164   000FD6                     TMR0L           equ	4054	;# 
   165   000FD7                     TMR0H           equ	4055	;# 
   166   000FD8                     STATUS          equ	4056	;# 
   167   000FD9                     FSR2            equ	4057	;# 
   168   000FD9                     FSR2L           equ	4057	;# 
   169   000FDA                     FSR2H           equ	4058	;# 
   170   000FDB                     PLUSW2          equ	4059	;# 
   171   000FDC                     PREINC2         equ	4060	;# 
   172   000FDD                     POSTDEC2        equ	4061	;# 
   173   000FDE                     POSTINC2        equ	4062	;# 
   174   000FDF                     INDF2           equ	4063	;# 
   175   000FE0                     BSR             equ	4064	;# 
   176   000FE1                     FSR1            equ	4065	;# 
   177   000FE1                     FSR1L           equ	4065	;# 
   178   000FE2                     FSR1H           equ	4066	;# 
   179   000FE3                     PLUSW1          equ	4067	;# 
   180   000FE4                     PREINC1         equ	4068	;# 
   181   000FE5                     POSTDEC1        equ	4069	;# 
   182   000FE6                     POSTINC1        equ	4070	;# 
   183   000FE7                     INDF1           equ	4071	;# 
   184   000FE8                     WREG            equ	4072	;# 
   185   000FE9                     FSR0            equ	4073	;# 
   186   000FE9                     FSR0L           equ	4073	;# 
   187   000FEA                     FSR0H           equ	4074	;# 
   188   000FEB                     PLUSW0          equ	4075	;# 
   189   000FEC                     PREINC0         equ	4076	;# 
   190   000FED                     POSTDEC0        equ	4077	;# 
   191   000FEE                     POSTINC0        equ	4078	;# 
   192   000FEF                     INDF0           equ	4079	;# 
   193   000FF0                     INTCON3         equ	4080	;# 
   194   000FF1                     INTCON2         equ	4081	;# 
   195   000FF2                     INTCON          equ	4082	;# 
   196   000FF2                     INTCON1         equ	4082	;# 
   197   000FF3                     PROD            equ	4083	;# 
   198   000FF3                     PRODL           equ	4083	;# 
   199   000FF4                     PRODH           equ	4084	;# 
   200   000FF5                     TABLAT          equ	4085	;# 
   201   000FF6                     TBLPTR          equ	4086	;# 
   202   000FF6                     TBLPTRL         equ	4086	;# 
   203   000FF7                     TBLPTRH         equ	4087	;# 
   204   000FF8                     TBLPTRU         equ	4088	;# 
   205   000FF9                     PCLAT           equ	4089	;# 
   206   000FF9                     PC              equ	4089	;# 
   207   000FF9                     PCL             equ	4089	;# 
   208   000FFA                     PCLATH          equ	4090	;# 
   209   000FFB                     PCLATU          equ	4091	;# 
   210   000FFC                     STKPTR          equ	4092	;# 
   211   000FFD                     TOS             equ	4093	;# 
   212   000FFD                     TOSL            equ	4093	;# 
   213   000FFE                     TOSH            equ	4094	;# 
   214   000FFF                     TOSU            equ	4095	;# 
   215   000F83                     _PORTD          set	3971
   216   000F95                     _TRISD          set	3989
   217   000F82                     _PORTC          set	3970
   218   000F94                     _TRISC          set	3988
   219   000F81                     _PORTB          set	3969
   220   000F93                     _TRISB          set	3987
   221                           
   222                           ; #config settings
   223                           
   224                           	psect	cinit
   225   0007A8                     __pcinit:
   226                           	callstack 0
   227   0007A8                     start_initialization:
   228                           	callstack 0
   229   0007A8                     __initialization:
   230                           	callstack 0
   231   0007A8                     end_of_initialization:
   232                           	callstack 0
   233   0007A8                     __end_of__initialization:
   234                           	callstack 0
   235   0007A8  0100               	movlb	0
   236   0007AA  EF78  F003         	goto	_main	;jump to C main() function
   237                           
   238                           	psect	cstackCOMRAM
   239   000001                     __pcstackCOMRAM:
   240                           	callstack 0
   241   000001                     ?___awdiv:
   242                           	callstack 0
   243   000001                     ___awdiv@dividend:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x0
   247   000001                     	ds	2
   248   000003                     ___awdiv@divisor:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0x2
   252   000003                     	ds	2
   253   000005                     ___awdiv@counter:
   254                           	callstack 0
   255   000005                     
   256                           ; 1 bytes @ 0x4
   257   000005                     	ds	1
   258   000006                     ___awdiv@sign:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x5
   262   000006                     	ds	1
   263   000007                     ___awdiv@quotient:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x6
   267   000007                     	ds	2
   268   000009                     ??_main:
   269                           
   270                           ; 1 bytes @ 0x8
   271   000009                     	ds	1
   272   00000A                     main@dividend:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x9
   276   00000A                     	ds	2
   277   00000C                     main@quotient:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0xB
   281   00000C                     	ds	2
   282   00000E                     main@result:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0xD
   286   00000E                     	ds	2
   287   000010                     main@divisor:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0xF
   291   000010                     	ds	2
   292                           
   293 ;;
   294 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   295 ;;
   296 ;; *************** function _main *****************
   297 ;; Defined at:
   298 ;;		line 7 in file "main.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;  divisor         2   15[COMRAM] int 
   303 ;;  result          2   13[COMRAM] int 
   304 ;;  quotient        2   11[COMRAM] int 
   305 ;;  dividend        2    9[COMRAM] int 
   306 ;;  i               2    0        int 
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		wreg, status,2, status,0, cstack
   311 ;; Tracked objects:
   312 ;;		On entry : 0/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   316 ;;      Params:         0       0       0       0       0       0       0
   317 ;;      Locals:         8       0       0       0       0       0       0
   318 ;;      Temps:          1       0       0       0       0       0       0
   319 ;;      Totals:         9       0       0       0       0       0       0
   320 ;;Total ram usage:        9 bytes
   321 ;; Hardware stack levels required when called: 1
   322 ;; This function calls:
   323 ;;		___awdiv
   324 ;; This function is called by:
   325 ;;		Startup code after reset
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           	psect	text0
   330   0006F0                     __ptext0:
   331                           	callstack 0
   332   0006F0                     _main:
   333                           	callstack 30
   334   0006F0  FFFF               	dw	65535	; assembler added errata NOP
   335                           
   336                           ;main.c: 9:     int dividend, divisor, quotient;;main.c: 10:     int result, i;;main.c: 
      +                          14:     dividend = 0x0E;
   337   0006F2  0E00               	movlw	0
   338   0006F4  6E0B               	movwf	(main@dividend+1)^0,c
   339   0006F6  0E0E               	movlw	14
   340   0006F8  6E0A               	movwf	main@dividend^0,c
   341                           
   342                           ;main.c: 15:     divisor = 0x04;
   343   0006FA  0E00               	movlw	0
   344   0006FC  6E11               	movwf	(main@divisor+1)^0,c
   345   0006FE  0E04               	movlw	4
   346   000700  6E10               	movwf	main@divisor^0,c
   347   000702                     
   348                           ;main.c: 16:     result = dividend;
   349   000702  0E00               	movlw	0
   350   000704  6E0F               	movwf	(main@result+1)^0,c
   351   000706  0E0E               	movlw	14
   352   000708  6E0E               	movwf	main@result^0,c
   353                           
   354                           ;main.c: 17:     quotient = 0;
   355   00070A  0E00               	movlw	0
   356   00070C  6E0D               	movwf	(main@quotient+1)^0,c
   357   00070E  0E00               	movlw	0
   358   000710  6E0C               	movwf	main@quotient^0,c
   359   000712                     l810:
   360   000712  FFFF               	dw	65535	; assembler added errata NOP
   361                           
   362                           ;main.c: 19:         if (divisor == 0)
   363   000714  5010               	movf	main@divisor^0,w,c
   364   000716  1011               	iorwf	(main@divisor+1)^0,w,c
   365   000718  A4D8               	btfss	status,2,c
   366   00071A  EF91  F003         	goto	u151
   367   00071E  EF94  F003         	goto	u150
   368   000722                     u151:
   369   000722  FFFF               	dw	65535	; assembler added errata NOP
   370   000724  EF9B  F003         	goto	l814
   371   000728                     u150:
   372   000728  FFFF               	dw	65535	; assembler added errata NOP
   373   00072A                     
   374                           ;main.c: 20:             result = 0;
   375   00072A  0E00               	movlw	0
   376   00072C  6E0F               	movwf	(main@result+1)^0,c
   377   00072E  0E00               	movlw	0
   378   000730  6E0E               	movwf	main@result^0,c
   379   000732  EF89  F003         	goto	l810
   380   000736                     l814:
   381   000736  FFFF               	dw	65535	; assembler added errata NOP
   382   000738  5010               	movf	main@divisor^0,w,c
   383   00073A  5C0E               	subwf	main@result^0,w,c
   384   00073C  500F               	movf	(main@result+1)^0,w,c
   385   00073E  0A80               	xorlw	128
   386   000740  6E09               	movwf	??_main^0,c
   387   000742  5011               	movf	(main@divisor+1)^0,w,c
   388   000744  0A80               	xorlw	128
   389   000746  5809               	subwfb	??_main^0,w,c
   390   000748  B0D8               	btfsc	status,0,c
   391   00074A  EFA9  F003         	goto	u161
   392   00074E  EFAC  F003         	goto	u160
   393   000752                     u161:
   394   000752  FFFF               	dw	65535	; assembler added errata NOP
   395   000754  EFAF  F003         	goto	l820
   396   000758                     u160:
   397   000758  FFFF               	dw	65535	; assembler added errata NOP
   398   00075A  EFBE  F003         	goto	l21
   399   00075E                     l820:
   400   00075E  FFFF               	dw	65535	; assembler added errata NOP
   401                           
   402                           ;main.c: 24:             result = result - divisor;
   403   000760  5010               	movf	main@divisor^0,w,c
   404   000762  5C0E               	subwf	main@result^0,w,c
   405   000764  6E0E               	movwf	main@result^0,c
   406   000766  5011               	movf	(main@divisor+1)^0,w,c
   407   000768  580F               	subwfb	(main@result+1)^0,w,c
   408   00076A  6E0F               	movwf	(main@result+1)^0,c
   409                           
   410                           ;main.c: 25:             quotient = quotient + 1;
   411   00076C  0E01               	movlw	1
   412   00076E  240C               	addwf	main@quotient^0,w,c
   413   000770  6E0C               	movwf	main@quotient^0,c
   414   000772  0E00               	movlw	0
   415   000774  200D               	addwfc	(main@quotient+1)^0,w,c
   416   000776  6E0D               	movwf	(main@quotient+1)^0,c
   417   000778  EF89  F003         	goto	l810
   418   00077C                     l21:
   419   00077C  FFFF               	dw	65535	; assembler added errata NOP
   420                           
   421                           ;main.c: 28:     TRISB = 0;
   422   00077E  6A93               	clrf	147,c	;volatile
   423                           
   424                           ;main.c: 29:     PORTB = result;
   425   000780  C00E  FF81         	movff	main@result,3969	;volatile
   426                           
   427                           ;main.c: 31:     TRISC = 0;
   428   000784  6A94               	clrf	148,c	;volatile
   429                           
   430                           ;main.c: 32:     PORTC = quotient;
   431   000786  C00C  FF82         	movff	main@quotient,3970	;volatile
   432                           
   433                           ;main.c: 34:     TRISD = 0;
   434   00078A  6A95               	clrf	149,c	;volatile
   435   00078C                     
   436                           ;main.c: 35:     PORTD = dividend / divisor;
   437   00078C  C00A  F001         	movff	main@dividend,___awdiv@dividend
   438   000790  C00B  F002         	movff	main@dividend+1,___awdiv@dividend+1
   439   000794  C010  F003         	movff	main@divisor,___awdiv@divisor
   440   000798  C011  F004         	movff	main@divisor+1,___awdiv@divisor+1
   441   00079C  EC01  F003         	call	___awdiv	;wreg free
   442   0007A0  5001               	movf	?___awdiv^0,w,c
   443   0007A2  6E83               	movwf	131,c	;volatile
   444   0007A4  EFFE  F01F         	goto	start
   445   0007A8                     __end_of_main:
   446                           	callstack 0
   447                           
   448 ;; *************** function ___awdiv *****************
   449 ;; Defined at:
   450 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;  dividend        2    0[COMRAM] int 
   453 ;;  divisor         2    2[COMRAM] int 
   454 ;; Auto vars:     Size  Location     Type
   455 ;;  quotient        2    6[COMRAM] int 
   456 ;;  sign            1    5[COMRAM] unsigned char 
   457 ;;  counter         1    4[COMRAM] unsigned char 
   458 ;; Return value:  Size  Location     Type
   459 ;;                  2    0[COMRAM] int 
   460 ;; Registers used:
   461 ;;		wreg, status,2, status,0
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   467 ;;      Params:         4       0       0       0       0       0       0
   468 ;;      Locals:         4       0       0       0       0       0       0
   469 ;;      Temps:          0       0       0       0       0       0       0
   470 ;;      Totals:         8       0       0       0       0       0       0
   471 ;;Total ram usage:        8 bytes
   472 ;; Hardware stack levels used: 1
   473 ;; This function calls:
   474 ;;		Nothing
   475 ;; This function is called by:
   476 ;;		_main
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           	psect	text1
   481   000602                     __ptext1:
   482                           	callstack 0
   483   000602                     ___awdiv:
   484                           	callstack 0
   485   000602  FFFF               	dw	65535	; assembler added errata NOP
   486   000604  6A06               	clrf	___awdiv@sign^0,c
   487   000606  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   488   000608  EF0B  F003         	goto	u90
   489   00060C  EF08  F003         	goto	u91
   490   000610                     u91:
   491   000610  FFFF               	dw	65535	; assembler added errata NOP
   492   000612  EF12  F003         	goto	l770
   493   000616                     u90:
   494   000616  FFFF               	dw	65535	; assembler added errata NOP
   495   000618  6C03               	negf	___awdiv@divisor^0,c
   496   00061A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   497   00061C  B0D8               	btfsc	status,0,c
   498   00061E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   499   000620  0E01               	movlw	1
   500   000622  6E06               	movwf	___awdiv@sign^0,c
   501   000624                     l770:
   502   000624  FFFF               	dw	65535	; assembler added errata NOP
   503   000626  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   504   000628  EF1B  F003         	goto	u100
   505   00062C  EF18  F003         	goto	u101
   506   000630                     u101:
   507   000630  FFFF               	dw	65535	; assembler added errata NOP
   508   000632  EF22  F003         	goto	l776
   509   000636                     u100:
   510   000636  FFFF               	dw	65535	; assembler added errata NOP
   511   000638  6C01               	negf	___awdiv@dividend^0,c
   512   00063A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   513   00063C  B0D8               	btfsc	status,0,c
   514   00063E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   515   000640  0E01               	movlw	1
   516   000642  1A06               	xorwf	___awdiv@sign^0,f,c
   517   000644                     l776:
   518   000644  FFFF               	dw	65535	; assembler added errata NOP
   519   000646  0E00               	movlw	0
   520   000648  6E08               	movwf	(___awdiv@quotient+1)^0,c
   521   00064A  0E00               	movlw	0
   522   00064C  6E07               	movwf	___awdiv@quotient^0,c
   523   00064E  5003               	movf	___awdiv@divisor^0,w,c
   524   000650  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   525   000652  B4D8               	btfsc	status,2,c
   526   000654  EF2E  F003         	goto	u111
   527   000658  EF31  F003         	goto	u110
   528   00065C                     u111:
   529   00065C  FFFF               	dw	65535	; assembler added errata NOP
   530   00065E  EF62  F003         	goto	l798
   531   000662                     u110:
   532   000662  FFFF               	dw	65535	; assembler added errata NOP
   533   000664  0E01               	movlw	1
   534   000666  6E05               	movwf	___awdiv@counter^0,c
   535   000668  EF3B  F003         	goto	l784
   536   00066C                     l782:
   537   00066C  FFFF               	dw	65535	; assembler added errata NOP
   538   00066E  90D8               	bcf	status,0,c
   539   000670  3603               	rlcf	___awdiv@divisor^0,f,c
   540   000672  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   541   000674  2A05               	incf	___awdiv@counter^0,f,c
   542   000676                     l784:
   543   000676  FFFF               	dw	65535	; assembler added errata NOP
   544   000678  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   545   00067A  EF41  F003         	goto	u121
   546   00067E  EF44  F003         	goto	u120
   547   000682                     u121:
   548   000682  FFFF               	dw	65535	; assembler added errata NOP
   549   000684  EF36  F003         	goto	l782
   550   000688                     u120:
   551   000688  FFFF               	dw	65535	; assembler added errata NOP
   552   00068A                     l786:
   553   00068A  FFFF               	dw	65535	; assembler added errata NOP
   554   00068C  90D8               	bcf	status,0,c
   555   00068E  3607               	rlcf	___awdiv@quotient^0,f,c
   556   000690  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   557   000692  5003               	movf	___awdiv@divisor^0,w,c
   558   000694  5C01               	subwf	___awdiv@dividend^0,w,c
   559   000696  5004               	movf	(___awdiv@divisor+1)^0,w,c
   560   000698  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   561   00069A  A0D8               	btfss	status,0,c
   562   00069C  EF52  F003         	goto	u131
   563   0006A0  EF55  F003         	goto	u130
   564   0006A4                     u131:
   565   0006A4  FFFF               	dw	65535	; assembler added errata NOP
   566   0006A6  EF5B  F003         	goto	l794
   567   0006AA                     u130:
   568   0006AA  FFFF               	dw	65535	; assembler added errata NOP
   569   0006AC  5003               	movf	___awdiv@divisor^0,w,c
   570   0006AE  5E01               	subwf	___awdiv@dividend^0,f,c
   571   0006B0  5004               	movf	(___awdiv@divisor+1)^0,w,c
   572   0006B2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   573   0006B4  8007               	bsf	___awdiv@quotient^0,0,c
   574   0006B6                     l794:
   575   0006B6  FFFF               	dw	65535	; assembler added errata NOP
   576   0006B8  90D8               	bcf	status,0,c
   577   0006BA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   578   0006BC  3203               	rrcf	___awdiv@divisor^0,f,c
   579   0006BE  2E05               	decfsz	___awdiv@counter^0,f,c
   580   0006C0  EF45  F003         	goto	l786
   581   0006C4                     l798:
   582   0006C4  FFFF               	dw	65535	; assembler added errata NOP
   583   0006C6  5006               	movf	___awdiv@sign^0,w,c
   584   0006C8  B4D8               	btfsc	status,2,c
   585   0006CA  EF69  F003         	goto	u141
   586   0006CE  EF6C  F003         	goto	u140
   587   0006D2                     u141:
   588   0006D2  FFFF               	dw	65535	; assembler added errata NOP
   589   0006D4  EF71  F003         	goto	l802
   590   0006D8                     u140:
   591   0006D8  FFFF               	dw	65535	; assembler added errata NOP
   592   0006DA  6C07               	negf	___awdiv@quotient^0,c
   593   0006DC  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   594   0006DE  B0D8               	btfsc	status,0,c
   595   0006E0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   596   0006E2                     l802:
   597   0006E2  FFFF               	dw	65535	; assembler added errata NOP
   598   0006E4  C007  F001         	movff	___awdiv@quotient,?___awdiv
   599   0006E8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   600   0006EC  0012               	return		;funcret
   601   0006EE  FFFF               	dw	65535	; errata NOP
   602   0006F0                     __end_of___awdiv:
   603                           	callstack 0
   604                           
   605                           	psect	smallconst
   606   000600                     __psmallconst:
   607                           	callstack 0
   608   000600  00                 	db	0
   609   000601  00                 	db	0	; dummy byte at the end
   610   000600                     __smallconst    set	__psmallconst
   611   000600                     __mediumconst   set	__psmallconst
   612   000000                     __activetblptr  equ	0
   613                           
   614                           	psect	rparam
   615   000001                     ___rparam_used  equ	1
   616   000000                     ___param_bank   equ	0
   617   000000                     __Lparam        equ	__Lrparam
   618   000000                     __Hparam        equ	__Hrparam
   619                           tosu	equ	0xFFF
   620                           tosh	equ	0xFFE
   621                           tosl	equ	0xFFD
   622                           stkptr	equ	0xFFC
   623                           pclatu	equ	0xFFB
   624                           pclath	equ	0xFFA
   625                           pcl	equ	0xFF9
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           prodh	equ	0xFF4
   631                           prodl	equ	0xFF3
   632                           indf0	equ	0xFEF
   633                           postinc0	equ	0xFEE
   634                           postdec0	equ	0xFED
   635                           preinc0	equ	0xFEC
   636                           plusw0	equ	0xFEB
   637                           fsr0h	equ	0xFEA
   638                           fsr0l	equ	0xFE9
   639                           wreg	equ	0xFE8
   640                           indf1	equ	0xFE7
   641                           postinc1	equ	0xFE6
   642                           postdec1	equ	0xFE5
   643                           preinc1	equ	0xFE4
   644                           plusw1	equ	0xFE3
   645                           fsr1h	equ	0xFE2
   646                           fsr1l	equ	0xFE1
   647                           bsr	equ	0xFE0
   648                           indf2	equ	0xFDF
   649                           postinc2	equ	0xFDE
   650                           postdec2	equ	0xFDD
   651                           preinc2	equ	0xFDC
   652                           plusw2	equ	0xFDB
   653                           fsr2h	equ	0xFDA
   654                           fsr2l	equ	0xFD9
   655                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     17      17
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0     551
                                              8 COMRAM     9     9      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM          127      0       0      0.0%
BITBANK0           128      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BITBIGSFRh         126      0       0      0.0%
BITBIGSFRl           1      0       0      0.0%
COMRAM             127     17      17     13.4%
BANK0              128      0       0      0.0%
BANK1              256      0       0      0.0%
BANK2              256      0       0      0.0%
BANK3              256      0       0      0.0%
BANK4              256      0       0      0.0%
BANK5              256      0       0      0.0%
BIGRAM            1535      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      17      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu May 08 15:01:55 2025

                                               l21 077C                                                 l24 07A4  
                                               u90 0616                                                 u91 0610  
                                     ___awdiv@sign 0006                                                l258 06EC  
                                              l800 06DA                                                l802 06E2  
                                              l810 0712                                                l820 075E  
                                              l812 072A                                                l822 078C  
                                              l814 0736                                                l806 06F0  
                                              l808 0702                                                l770 0624  
                                              l762 0604                                                l780 0664  
                                              l772 0638                                                l764 0606  
                                              l790 06AC                                                l782 066C  
                                              l774 0640                                                l766 0618  
                                              l792 06B4                                                l784 0676  
                                              l776 0644                                                l768 0620  
                                              l794 06B6                                                l786 068A  
                                              l778 064E                                                l796 06BE  
                                              l788 0692                                                l798 06C4  
                                              u100 0636                                                u101 0630  
                                              u110 0662                                                u111 065C  
                                              u120 0688                                                u121 0682  
                                              u130 06AA                                                u131 06A4  
                                              u140 06D8                                                u141 06D2  
                                              u150 0728                                                u151 0722  
                                              u160 0758                                                u161 0752  
                                      main@divisor 0010                                               _main 06F0  
                                             start 3FFC                                       ___param_bank 0000  
                                     main@dividend 000A                                              ?_main 0001  
                                  __end_of___awdiv 06F0                                    ___awdiv@divisor 0003  
                                  ___awdiv@counter 0005                                              _PORTB 0F81  
                                            _PORTC 0F82                                              _PORTD 0F83  
                                            _TRISB 0F93                                              _TRISC 0F94  
                                            _TRISD 0F95                                              status 0FD8  
                                     main@quotient 000C                                    __initialization 07A8  
                                     __end_of_main 07A8                                             ??_main 0009  
                                    __activetblptr 0000                                   ___awdiv@dividend 0001  
                                        ??___awdiv 0005                                   ___awdiv@quotient 0007  
                                           isa$std 0001                                       __mediumconst 0600  
                                       __accesstop 0080                            __end_of__initialization 07A8  
                                    ___rparam_used 0001                                     __pcstackCOMRAM 0001  
                                          __Hparam 0000                                            __Lparam 0000  
                                          ___awdiv 0602                                       __psmallconst 0600  
                                          __pcinit 07A8                                            __ramtop 0600  
                                          __ptext0 06F0                                            __ptext1 0602  
                             end_of_initialization 07A8                                         main@result 000E  
                              start_initialization 07A8                                           ?___awdiv 0001  
                                      __smallconst 0600                                           __Hrparam 0000  
                                         __Lrparam 0000                                           isa$xinst 0000  
